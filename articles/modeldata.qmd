---
title: "modeldata"
author: "データサイエンス関連基礎調査WG"
date: "`r Sys.Date()`"
format:
  html:
    toc: true
    toc_depth: '3'
    fig_width: 6
    fig_height: 3
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
if (!require(modeldata)) install.packages('modeldata', repos = "http://cran.us.r-project.org")
```

## パッケージの概要

modeldataには、Rにおけるモデリングや機械学習のためのツール群として有名なtidymodelsパッケージ[1]のドキュメントやテストに使用されたデータセットが含まれており、これらは様々な機械学習や予測モデリングのサンプルデータとしても活用することができます。
また、データセットそのものに加え、分類や回帰課題のためのシミュレーションデータを生成する関数も含まれています。

## パッケージの使用例

### データセット

modeldataには様々なデータセットが用意されています。
データセットは以下のように、データセット名を指定してロードすることができます。

```{r}
library(modeldata)
data("Chicago", package = "modeldata")
str(Chicago)
```

以下は格納されているデータセットの一覧です。(バージョン1.4.0時点です。)
各データのカラムやデータソース等の詳細は、modeldataのリファレンス[2]をご参照ください。

+----------------------+----------------------------------------------------------------+------------+-----------+
|データセット名        |概要　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　|レコード数  |カラム数   |
+:=====================+:===============================================================+===========:+==========:+
|Chicago               |シカゴの鉄道乗客数データ　　　　　　　　　　　　　　　　　　　　|        5698|         50|
|stations              |　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　|          20|          1|
+----------------------+----------------------------------------------------------------+------------+-----------+
|Sacramento            |サクラメント市（カリフォルニア州）の住宅価格　　　　　　　　　　|         932|          9|
+----------------------+----------------------------------------------------------------+------------+-----------+
|Smithsonian           |スミソニアン博物館のジオコードデータ　　　　　　　　　　　　　　|          20|          3|
+----------------------+----------------------------------------------------------------+------------+-----------+
|ad_data               |アルツハイマー病に関する333患者のデータ　　　　　　　   　　　　|         333|        131|
+----------------------+----------------------------------------------------------------+------------+-----------+
|ames                  |エイムズ市（アイオワ州）の住宅データ　　　　　　　　　　　　　　|        2930|         74|
+----------------------+----------------------------------------------------------------+------------+-----------+
|attrition             |従業員の離職に関するデータ　　　　　　　　　　　　　　　　　　　|        1470|         31|
+----------------------+----------------------------------------------------------------+------------+-----------+
|biomass               |バイオマス燃料のデータ　　　　　　　　　　　　　　　　　　　　　|         536|          8|
+----------------------+----------------------------------------------------------------+------------+-----------+
|bivariate_test        |二値分類用データの例　　　　　　　　　　　　　　　　　　　　　　|         710|          3|
|bivariate_train       |　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　|        1009|          3|
|bivariate_val         |　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　|         300|          3|
+----------------------+----------------------------------------------------------------+------------+-----------+
|car_prices            |ケリー・ブルー・ブック社によるGM車のリセールデータ　　　　　  　|         804|         18|
+----------------------+----------------------------------------------------------------+------------+-----------+
|cat_adoption          |保護猫の譲渡に関するデータ　　　　　　　　　　　　　　　　　　　|        2257|         20|
+----------------------+----------------------------------------------------------------+------------+-----------+
|cells                 |細胞体の分類　　　　　　　　　　　　　　　　　　　　　　　　　　|        2019|         58|
+----------------------+----------------------------------------------------------------+------------+-----------+
|check_times           |rパッケージの実行時間のデータ　　　　　　　　　　　　　　　 　　|       13626|         25|
+----------------------+----------------------------------------------------------------+------------+-----------+
|chem_proc_yield       |化学製品の整合工程に関するデータセット　　　　　　　　　　　　　|         176|         58|
+----------------------+----------------------------------------------------------------+------------+-----------+
|concrete              |コンクリート混合物の圧縮強度　　　　　　　　　　　　　　　　　　|        1030|          9|
+----------------------+----------------------------------------------------------------+------------+-----------+
|covers                |森林の主要な樹木に関する未加工のテキストデータ　　　　　　　　　|          40|          1|
+----------------------+----------------------------------------------------------------+------------+-----------+
|credit_data           |信用リスクの分類用データ　　　　　　　　　　　　　　　　　　　　|        4454|         14|
+----------------------+----------------------------------------------------------------+------------+-----------+
|crickets              |コオロギが鳴く頻度と気温の関係  　　　　　　　　　　　　　　　　|          31|          3|
+----------------------+----------------------------------------------------------------+------------+-----------+
|deliveries            |フード・デリバリーの配送時間のデータ　　　　　　　　　　　　　　|       10012|         31|
+----------------------+----------------------------------------------------------------+------------+-----------+
|drinks                |アルコール類の売上の時系列データ　　　　　　　　　　　　　　　　|         309|          2|
+----------------------+----------------------------------------------------------------+------------+-----------+
|grants_2008           |学術助成金の採択／非採択のデータ　　　　　　　　　　　　　　　　|        6633|          1|
|grants_other          |　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　|        8190|       1503|
|grants_test           |　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　|         518|       1503|
+----------------------+----------------------------------------------------------------+------------+-----------+
|hepatic_injury_qsar   |肝臓損傷の分類用データ　　　　　　　　　　　　　　　　　　　　　|         281|        377|
+----------------------+----------------------------------------------------------------+------------+-----------+
|hotel_rates           |リスボンにおけるホテル料金のデータ　　　　　　　　　　　　　　　|       15402|         28|
+----------------------+----------------------------------------------------------------+------------+-----------+
|hpc_cv                |高性能計算(HPC)環境における実行時間のクラス確率の予測　　　     |        3467|          7|
+----------------------+----------------------------------------------------------------+------------+-----------+
|hpc_data              |高性能計算(HPC)環境における実行時間のクラス分類用データ　　     |        4331|          8|
+----------------------+----------------------------------------------------------------+------------+-----------+
|ischemic_stroke       |虚血性脳卒中の有無を予測するためのデータ　　　　　　　　　　　　|         126|         29|
+----------------------+----------------------------------------------------------------+------------+-----------+
|leaf_id_flavia        |葉のイメージデータの特徴量から植物の種を特定するデータ　　　　　|        1907|         59|
+----------------------+----------------------------------------------------------------+------------+-----------+
|lending_club          |レンディング・クラブ・サービスのローンデータ　　　　　　　　　　|        9857|         23|
+----------------------+----------------------------------------------------------------+------------+-----------+
|meats                 |肉サンプルの脂肪含有量、水分含有量、タンパク質含有量　　　　　　|         215|        103|
+----------------------+----------------------------------------------------------------+------------+-----------+
|mlc_churn             |顧客の解約に関するデータ　　　　　　　　　　　　　　　　　　　　|        5000|         20|
+----------------------+----------------------------------------------------------------+------------+-----------+
|oils                  |市販の油の脂肪酸濃度　　　　　　　　　　　　　　　　　　　　　　|          96|          8|
+----------------------+----------------------------------------------------------------+------------+-----------+
|parabolic             |放物線状の境界を持つ二値分類データ　　　　　　　　　　　　　　　|         500|          3|
+----------------------+----------------------------------------------------------------+------------+-----------+
|pathology             |肝臓の病理データ　　　　　　　　　　　　　　　　　　　　　　　　|         344|          2|
+----------------------+----------------------------------------------------------------+------------+-----------+
|pd_speech             |パーキンソン病患者の発話の分類データ　　　　　　　　　　　　　　|         252|        752|
+----------------------+----------------------------------------------------------------+------------+-----------+
|penguins              |パーマー基地のペンギンのデータ　　　　　　　　　　　　　　　　　|         344|          7|
+----------------------+----------------------------------------------------------------+------------+-----------+
|permeability_qsar     |分子構造に関する化学情報から透過性を予測するデータ　　　　　　　|         165|       1108|
+----------------------+----------------------------------------------------------------+------------+-----------+
|scat                  |動物の糞の形態計測データ　　　　　　　　　　　　　　　　　　　　|         110|         19|
+----------------------+----------------------------------------------------------------+------------+-----------+
|solubility_test       |多変量適応的回帰スプライン(MARS)モデルによる溶解度の予測　      |         316|          2|
+----------------------+----------------------------------------------------------------+------------+-----------+
|stackoverflow         |Stack Overflowによる年次サーベイのデータ　  　              　　|        5594|         21|
+----------------------+----------------------------------------------------------------+------------+-----------+
|steroidogenic_toxicity|ステロイド生成毒性を評価するためのin vitroアッセイデータ        |         162|         13|
+----------------------+----------------------------------------------------------------+------------+-----------+
|tate_text             |テート・ギャラリーの近現代美術作品のメタデータ　　　　　　　　　|        4284|          5|
+----------------------+----------------------------------------------------------------+------------+-----------+
|taxi                  |シカゴのタクシーのデータセット　　　　　　　　　　　　　　　　　|       10000|          7|
+----------------------+----------------------------------------------------------------+------------+-----------+
|testing_data          |Amazonの食品レビューのデータ　　　　　　　　　　　　　　      　|        1000|          3|
|training_data         |　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　|        4000|          3|
+----------------------+----------------------------------------------------------------+------------+-----------+
|two_class_dat         |2クラス分類用に人工的に作成したデータ　　　　　　　　　　　　 　|         791|          3|
+----------------------+----------------------------------------------------------------+------------+-----------+
|two_class_example     |2クラス分類の予測値　　　　　　　　　　　　　　　　　　　　　 　|         500|          4|
+----------------------+----------------------------------------------------------------+------------+-----------+
|wa_churn              |IBMワトソンのサイトから取得した顧客解約データ　　　　　　　   　|        7043|         20|
+----------------------+----------------------------------------------------------------+------------+-----------+

### データ生成関数

modeldataには前項で紹介したデータセットに加え、データを生成するための関数も用意されています。  

#### sim_classification

sim_classification関数は、二値分類用のシミュレーションデータを生成します。  
以下はデータ生成の実行例です。
引数methodには生成方法を指定しますが、バージョン1.4.0時点では"caret"が唯一のオプションとなっており、caretパッケージ[3]のcaret::twoClassSim()関数と同じ生成方法が実装されています。

```{r}
set.seed(1234)

d1 <- sim_classification(
  num_samples = 100,  # 生成するレコード数(デフォルトは100)
  method = "caret",   # 生成方法(デフォルトは"caret")
  intercept = -5,     # クラスの偏りをコントロールする(デフォルトは-5)
  num_linear = 2,     # クラス分類に無相関の変数linear_nの数(デフォルトは10)
  keep_truth = TRUE   # class_1のクラス確率の出力有無(デフォルトはFALSE)
)

str(d1)
```
"class"が、当該レコードが属するクラスを示すファクター変数で、class_1とclass_2のいずれかのレベルが格納されています。  
他の変数はclass_1とclass_2のうちどちらに属するかを予測するための説明変数(の候補)ですが、実際にクラス分類に使用できるのはtwo_factor_1とtwo_factor_2で、他はクラスと無相関という設定になっています。
具体的には、two_factor_1とtwo_factor_2の主効果と交互作用および引数に指定したinterceptによるバイアス(intercept - 4 * two_factor_1 + 4 * two_factor_2 + 2 * two_factor_1 * two_factor_2)を主な要素として計算した値を、ロジスティック関数でclass_1確率に変換し、当該確率をもとにランダムでクラスを割り当てています。  
  
以下では生成したデータの分析イメージの参考例として、two_factor_1とtwo_factor2を使用して2クラスを分離する線形識別関数を求めています。
$w_0+w_1*two\_factor\_1 + w_2*two\_factor\_2\geq0$であればクラス1に、$w_0+w_1*two\_factor\_1 + w_2*two\_factor\_2<0$であればクラス2に分類するモデルを考えます。
教師データを、クラス1なら$+1$、クラス2なら$-1$として、最小二乗誤差基準により係数を推定しています。

```{r}
# 線形識別関数のパラメータ推定
y <- ifelse(as.numeric(d1$class) > 1, -1, 1)  # 教師データをclass_1=1, class_2=-1に変換
X <- cbind(1, as.matrix(d1[, c("two_factor_1", "two_factor_2")])) # パターン行列
w_hat <- solve(t(X) %*% X) %*% t(X) %*% y     # 正規方程式で最小二乗法の解を求める

# 結果のplot
plot(x=d1$two_factor_1, y=d1$two_factor_2, 
     pch=ifelse(as.numeric(d1$class)==1, 1, 3), 
     col=d1$class)
legend("topleft", legend=levels(d1$class), pch=c(1, 3), col=c(1, 2))
abline(a=w_hat[1]/w_hat[3], b=-w_hat[2]/w_hat[3], lty=2)
```

```{r include=FALSE}
# 作業メモ
# データ生成方法について、公式リファレンスと実際のソースコードが一致しておらず、意図通りに実装されているか不明。
# 本資料の趣旨を鑑みて、データ生成方法の詳細に関する説明は必須ではないと判断し、記載しないこととする。
# 以下は当初の記載案。

#method="caret"におけるクラス分類は、以下の1~2を合計した値をロジット関数によりclass_1のクラス確率に変換し、当該確率に応じてランダムに割り当てています。  
#(パッケージのリファレンス上は3も加算してクラス確率を計算することとなっていますが、バージョン1.4.0時点では3を加算しない値でクラス確率が計算されていました。)

#1. クラス分類に相関がある変数two_factor_1とtwo_factor_2の主効果及び交互作用。すなわち、  
#    intercept - 4 * two_factor_1 + 4 * two_factor_2 + 2 * two_factor_1 * two_factor_2  
#    ここでinterceptは引数として与えた数値、two_factor_1及びtwo_factor_2は平均0、分散2、相関係数0.65の正規乱数。
#2. (non_linear_1^3) + 2 * exp(-6 * (non_linear_1 - 0.3)^2) + 2 * sin(PI * non_linear_2 * non_linear_3)  
#    ここでnon_linear_1は(-1,1)の一様乱数、non_linear_2～3は(0,1)の一様乱数。
#3. 引数num_linearで指定した数をnとすると、-2.5 * linear_1 + ・・・ + (-1)^n * 0.25 * linear_n  
#    ここで各linear_*は標準正規乱数で、係数は2.5～0.25の範囲をn分割した値に-1と1を交互に乗算する。例えばn=4の場合、  
#    -2.5 * linear_1 + 1.75 * linear_2 -1.00 * linear_3 + 0.25 * linear_4  

# class_1確率の計算方法の確認
intercept_tmp <- -5
effect_1 <- intercept_tmp - 4 * d1$two_factor_1 + 
  4 * d1$two_factor_2 + 2 * d1$two_factor_1 * d1$two_factor_2
effect_2 <- (d1$non_linear_1^3) + 2 * exp(-6 * (d1$non_linear_1 - 0.3)^2) + 
  2 * sin(pi * d1$non_linear_2 * d1$non_linear_3)  #マニュアルではpiが乗算されていないため注意
effect_3 <- -2.5 * d1$linear_1 + 0.25 * d1$linear_2
y = effect_1 + effect_2 # effect3は加算しない
p <- 1 / (1 + exp(-y))
head(data.frame(list(
  .truth = d1$.truth,
  check = p
)))
```

#### sim_regression

sim_regression関数は、回帰用のシミュレーションデータを生成します。
以下の実行例の通り、目的変数outcomeとその数値の算出に使用した説明変数(predictor)が出力されます。

```{r}
d2 <- sim_regression(
  num_samples = 100,      # 生成するレコード数(デフォルトは100)
  method = "sapp_2014_1", # 生成方法(デフォルトは"sapp_2014_1")
  std_dev = NULL,         # 平均0の正規分布によるエラー項の標準偏差(デフォルトはNULLで、NULLの場合methodごとに決まった値が使用される)
  factors = FALSE,        # predictorに二値変数が含まれる場合のfactor化有無(デフォルトはFALSE)
  keep_truth = TRUE       # エラー項を含まない予測値の出力有無(デフォルトはFALSE)
)

str(d2)
```

predictorの数や生成方法、およびそれらのpredictorから目的変数outcomeを計算する算式は、method引数の指定により異なります。  
上の実行例で指定した"sapp_2014_1"では、平均0、分散9の正規乱数を独立に20個生成してpredictorとし、以下コードに示す計算式の算出結果に正規分布に従うエラー項を加算してoutcomeを作成しています。

```{r}
y <- with(d2,
     # "sapp_2014_1"の算式
       predictor_01 + sin(predictor_02) + log(abs(predictor_03)) +
       predictor_04^2 + predictor_05 * predictor_06 +
       ifelse(predictor_07 * predictor_08 * predictor_09 < 0, 1, 0) +
       ifelse(predictor_10 > 0, 1, 0) + predictor_11 * ifelse(predictor_11 > 0, 1, 0) +
       sqrt(abs(predictor_12)) + cos(predictor_13) + 2 * predictor_14 + abs(predictor_15) +
       ifelse(predictor_16 < -1, 1, 0) + predictor_17 * ifelse(predictor_17 < -1, 1, 0) -
       2 * predictor_18 - predictor_19 * predictor_20
)

# パッケージの計算結果との比較
head(data.frame(list(
  .truth = d2$.truth,
  check = y
)))
```

バージョン1.4.0時点では、生成方法を指定するmethod引数として、"sapp_2014_1"以外にも"sapp_2014_2"、"van_der_laan_2007_1"および"van_der_laan_2007_2"が選択可能です。
それぞれの生成方法の詳細はリファレンス[2]をご参照ください。

#### sim_noise

sim_noise関数は平均0、分散1の正規分布に従う乱数を生成します。

```{r}
d3 <- sim_noise(
  num_samples = 10,           # 生成するレコード数
  num_vars = 3,               # 生成するカラム(正規乱数)の数
  cov_type = "exchangeable",  # 分散共分散行列の設定(デフォルトは"exchangeable")
  outcome = "none",           # outcome変数の出力有無(デフォルトは"none")
  num_classes = 2,            # outcome="classification"の場合のクラス数(デフォルトは2)
  cov_param = 0               # 変数間の共分散に関するパラメータ(デフォルトは0)
)

str(d3)
```

各レコードはnoise_iとしてnum_varsで指定した数だけ変数が生成されていますが、これらは多変量正規分布に従っています。
この多変量正規分布は、前述のとおり平均は0、分散共分散行列の対角成分(分散)は1に固定されていますが、変数間の共分散は引数cov_typeとcov_paramで制御します。
cov_type="exchangeable"を指定すると、どの(異なる)変数間の共分散もcov_paramで設定した値になります。
一方、cov_type="toeplitz"では、cov_paramで指定した値から、変数間のインデックスが離れるにつれて共分散が指数的に変化するような行列となります。(例えば、noise_1とnoise_2間の共分散がcov_param=0.5とすると、noise_1とnoise_3間の共分散は$0.5^2=0.25$、noise_1とnoise_4間の共分散は$0.5^3=0.125$等となります。)  
  
引数outcomeに"regression"または"classification"を指定すると、それぞれ数値変数及びクラスを示すファクター変数が出力されますが、いずれも変数noise_iとは関連のない、ランダムな値が設定されます。

```{r include=FALSE}
# cov_typeの検証
cov_param <- 0.5
num_vars <- 4

## cov_type="exchangeable"の分散共分散行列
var_cov <- matrix(cov_param, ncol = num_vars, nrow = num_vars)
diag(var_cov) <- 1
var_cov

## cov_type="toeplitz"の分散共分散行列
var_cov_values <- cov_param^(seq(0, num_vars - 1, by = 1))
var_cov <- toeplitz(var_cov_values)
var_cov
```

#### sim_logistic、sim_multinomial

sim_logistic関数及びsim_multinomial関数は、それぞれ2クラス分類および3クラス分類用のデータを生成します。
平均0、分散1、相関係数が引数correlationに従う正規乱数AおよびBの2変数を説明変数として使用しますが、クラス確率を計算するためのAとBの算式を、柔軟に設定できる点が特徴です。  
  
以下はsim_logistic関数による実行例です。
引数eqnには"~"から始まる2変数AとBの式、すなわち右辺のみのformulaオブジェクトを指定します。
eqnで指定した数式で計算した値をロジスティック関数によりクラス1確率に変換し、当該確率をもとにランダムにクラスを割り当てています。

```{r}
d4 <- sim_logistic(
  num_samples = 1000,        # 生成するレコード数
  eqn = ~ 2 * A + B^2 + 1.2, # 2つの正規乱数AとBにより予測子を計算する算式
  #eqn = rlang::expr(2 * A + B^2 + 1.2),           # 参考：expressionで指定することも可能
  #eqn = base::expression(2 * A + B^2 + 1.2)[[1]], # 参考：expression listは指定できないため注意
  correlation = 0,           # 変数AとBの相関係数(デフォルトは0)
  keep_truth = TRUE          # クラス1確率の出力有無(デフォルトはFALSE)
)

str(d4)
```

```{r}
# クラス確率が指定した式に従って算出されていることの確認
p <- 1 / (1 + exp(-(2*d4$A + d4$B^2 + 1.2)))
head(data.frame(list(
  .truth = d4$.truth,
  check = p
)))
```

sim_multinomial関数は、3クラス分類用のデータを生成します。  
説明変数はsim_logistic関数と同様、正規分布に従う乱数AとBの二つですが、AとBの算式として、三つのクラスに対応する三つの式eqn_1～eqn_3を指定します。
これら三つの式の算出結果を入力とするソフトマックス関数$P(class=k)=exp(eqn\_k)/\Sigma_{i}{exp(eqn\_i)}$により各クラスのクラス確率を計算し、当該確率をもとに、ランダムに3クラスのいずれかを割り当てています。

```{r}
d5 <- sim_multinomial(
  num_samples = 10,      # 生成するレコード数
  eqn_1 = ~ A + B,       # クラス1に対応する式
  eqn_2 = ~ 2 * A * B,   # クラス2に対応する式
  eqn_3 = ~ log(abs(B)), # クラス3に対応する式
  correlation = 0,       # 変数AとBの相関係数(デフォルトは0)
  keep_truth = TRUE      # 各クラスのクラス確率の出力有無(デフォルトはFALSE)
)

str(d5)
```

```{r}
# クラス確率が指定した式に従って算出されていることの確認

## 引数で指定した三つの算式
y1 <- d5$A + d5$B
y2 <- 2 * d5$A * d5$B
y3 <- log(abs(d5$B))

## ソフトマックス関数によるクラス確率
p1 <- exp(y1) / (exp(y1) + exp(y2) + exp(y3))
p2 <- exp(y2) / (exp(y1) + exp(y2) + exp(y3))
p3 <- exp(y3) / (exp(y1) + exp(y2) + exp(y3))

## パッケージによる計算結果と比較
head(data.frame(list(
  .truth_one = d5$.truth_one,
  check_one = p1,
  .truth_two = d5$.truth_two,
  check_two = p2,
  .truth_three = d5$.truth_three,
  check_three = p3
)))
```

## 参考資料

[1] Kuhn et al., (2020). Tidymodels: a collection of packages for modeling and machine learning using tidyverse principles. [https://www.tidymodels.org](https://www.tidymodels.org).  
[2] Kuhn M (2024). modeldata: Data Sets Useful for Modeling Examples. R package version 1.4.0, [https://github.com/tidymodels/modeldata](https://github.com/tidymodels/modeldata), [https://modeldata.tidymodels.org](https://modeldata.tidymodels.org).  
[3] Kuhn M (2019). [The caret Package](https://topepo.github.io/caret/).
