{
  "hash": "9d4f20020021601ebe40e0d00034ca50",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"C50\"\nauthor: \"データサイエンス関連基礎調査WG\"\ndate: \"2025-08-01\"\nformat:\n  html:\n    toc: true\n    toc-depth: 3\n    fig-width: 6\n    fig-height: 3\n---\n\n\n\n\n\n\n## パッケージの概要\nC50パッケージではC5.0アルゴリズムを用いた決定木モデルを使用できます。\n\n## 使用例：PimaIndiansDiabetesデータの分類\nPimaIndiansDiabetesデータを用いて、種々の項目からその患者が糖尿病患者であるかを判定する決定木モデルをC50パッケージを用いて構築します。\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(mlbench)\ndata(PimaIndiansDiabetes)\ndf <- PimaIndiansDiabetes\ntar.idx <- 9\n```\n:::\n\n\n\n\nデータの中身の確認です。（head）\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhead(df)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  pregnant glucose pressure triceps insulin mass pedigree age diabetes\n1        6     148       72      35       0 33.6    0.627  50      pos\n2        1      85       66      29       0 26.6    0.351  31      neg\n3        8     183       64       0       0 23.3    0.672  32      pos\n4        1      89       66      23      94 28.1    0.167  21      neg\n5        0     137       40      35     168 43.1    2.288  33      pos\n6        5     116       74       0       0 25.6    0.201  30      neg\n```\n\n\n:::\n:::\n\n\n\n\nデータの中身の確認です。（str）\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nstr(df)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n'data.frame':\t768 obs. of  9 variables:\n $ pregnant: num  6 1 8 1 0 5 3 10 2 8 ...\n $ glucose : num  148 85 183 89 137 116 78 115 197 125 ...\n $ pressure: num  72 66 64 66 40 74 50 0 70 96 ...\n $ triceps : num  35 29 0 23 35 0 32 0 45 0 ...\n $ insulin : num  0 0 0 94 168 0 88 0 543 0 ...\n $ mass    : num  33.6 26.6 23.3 28.1 43.1 25.6 31 35.3 30.5 0 ...\n $ pedigree: num  0.627 0.351 0.672 0.167 2.288 ...\n $ age     : num  50 31 32 21 33 30 26 29 53 54 ...\n $ diabetes: Factor w/ 2 levels \"neg\",\"pos\": 2 1 2 1 2 1 2 1 2 2 ...\n```\n\n\n:::\n:::\n\n\n\n\n各変数の意味は以下の通りです。\n\n| 変数名            | データ型 | 概要                           |\n|:------------------|:---------|:-------------------------------|\n| pregnant      　　| num      | 妊娠回数                　　　 |\n| glucose           | num      | 血漿グルコース濃度（負荷試験） |\n| pressure    　　　| num      | 拡張期血圧     [mm Hg]   　 　 |\n| triceps   　　　　| num      | 上腕三頭筋皮膚襞の厚さ  [mm]   |\n| insulin  　　　　 | num      | 2時間血清インスリン  [mu U/ml] |\n| mass              | num      | BMI　　　                      |\n| pedigree          | num      | 糖尿病血統機能                 |\n| age               | num      | 年齢                           |\n| diabetes          | Factor   | クラス変数（糖尿病の検査）     |\n\nsummaryを表示します。\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(df)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n    pregnant         glucose         pressure         triceps     \n Min.   : 0.000   Min.   :  0.0   Min.   :  0.00   Min.   : 0.00  \n 1st Qu.: 1.000   1st Qu.: 99.0   1st Qu.: 62.00   1st Qu.: 0.00  \n Median : 3.000   Median :117.0   Median : 72.00   Median :23.00  \n Mean   : 3.845   Mean   :120.9   Mean   : 69.11   Mean   :20.54  \n 3rd Qu.: 6.000   3rd Qu.:140.2   3rd Qu.: 80.00   3rd Qu.:32.00  \n Max.   :17.000   Max.   :199.0   Max.   :122.00   Max.   :99.00  \n    insulin           mass          pedigree           age        diabetes \n Min.   :  0.0   Min.   : 0.00   Min.   :0.0780   Min.   :21.00   neg:500  \n 1st Qu.:  0.0   1st Qu.:27.30   1st Qu.:0.2437   1st Qu.:24.00   pos:268  \n Median : 30.5   Median :32.00   Median :0.3725   Median :29.00            \n Mean   : 79.8   Mean   :31.99   Mean   :0.4719   Mean   :33.24            \n 3rd Qu.:127.2   3rd Qu.:36.60   3rd Qu.:0.6262   3rd Qu.:41.00            \n Max.   :846.0   Max.   :67.10   Max.   :2.4200   Max.   :81.00            \n```\n\n\n:::\n:::\n\n\n\n\npsychパッケージのpairs.panelsを用いて、散布図の一覧を表示します。\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(psych)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndf.x <- df[-tar.idx]\ndf.y <- df[tar.idx]\ndf.y <- ifelse(df.y == \"pos\", 1, 2)\npairs.panels(df.x, bg=c(\"skyblue\", \"salmon\")[df.y], pch=21)\n```\n\n::: {.cell-output-display}\n![](C50_files/figure-html/unnamed-chunk-6-1.png){width=576}\n:::\n:::\n\n\n\n\nggplot2パッケージを用いて、ヒストグラムを表示します。変数ごとにpos/negの分布の傾向を把握することができます。\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ggplot2)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\nAttaching package: 'ggplot2'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nThe following objects are masked from 'package:psych':\n\n    %+%, alpha\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(tidyr)\nlibrary(dplyr)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\nAttaching package: 'dplyr'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# 数値変数だけを抽出（diabetes以外）\nnum_vars <- names(df)[sapply(df, is.numeric)]\n\n# 長い形式に変換\ndf_long <- df %>%\n  pivot_longer(cols = all_of(num_vars), names_to = \"variable\", values_to = \"value\")\n\n# ヒストグラムを1つの図にまとめて作成\nggplot(df_long, aes(x = value, fill = diabetes)) +\n  geom_histogram(position = \"identity\", alpha = 0.5, bins = 30) +\n  facet_wrap(~variable, scales = \"free\") +\n  labs(title = \"Histograms of Variables by Diabetes\",\n       x = \"Value\", y = \"Count\") +\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](C50_files/figure-html/unnamed-chunk-8-1.png){width=576}\n:::\n:::\n\n\n\n\n## モデル構築\nモデル生成のための訓練データと、モデル評価のためのテストデータに分割します。データ割合は訓練データを7割、テストデータを3割とします。\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# 再現性のためにシードを設定\nset.seed(1234)\n\n# データの分割\nn <- nrow(df)\ntrain.rate <- 0.7\n\n# データの抽出\ntrain.set <- sample(n, n * train.rate)\ntrain.df <- df[train.set, ]\n\ntest.set <- setdiff(1:n, train.set)\ntest.df <- df[test.set, ]\n```\n:::\n\n\n\n\n\nモデルを生成します。\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(C50)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: package 'C50' was built under R version 4.5.1\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmodel <- C5.0(\n  x = train.df[-tar.idx], \n  y = train.df[[tar.idx]]\n)\n```\n:::\n\n\n\n\nsummaryを用いると、モデルのサマリが表示されます。\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(model)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nCall:\nC5.0.default(x = train.df[-tar.idx], y = train.df[[tar.idx]])\n\n\nC5.0 [Release 2.07 GPL Edition]  \tFri Aug  1 17:34:30 2025\n-------------------------------\n\nClass specified by attribute `outcome'\n\nRead 537 cases (9 attributes) from undefined.data\n\nDecision tree:\n\nglucose <= 127:\n:...age <= 28:\n:   :...mass <= 32.2: neg (113/1)\n:   :   mass > 32.2:\n:   :   :...triceps > 8: neg (64/8)\n:   :       triceps <= 8:\n:   :       :...glucose <= 110: neg (7)\n:   :           glucose > 110: pos (4)\n:   age > 28:\n:   :...mass <= 26.3: neg (33/1)\n:       mass > 26.3:\n:       :...pedigree <= 0.845: neg (100/30)\n:           pedigree > 0.845:\n:           :...pregnant <= 1: neg (5/1)\n:               pregnant > 1: pos (10)\nglucose > 127:\n:...glucose <= 165:\n    :...mass <= 29.9: neg (55/15)\n    :   mass > 29.9:\n    :   :...insulin <= 196: pos (70/20)\n    :       insulin > 196:\n    :       :...age <= 32: neg (13/1)\n    :           age > 32: pos (8/1)\n    glucose > 165:\n    :...pedigree > 1.114: neg (5/2)\n        pedigree <= 1.114:\n        :...age > 27: pos (41/1)\n            age <= 27:\n            :...triceps <= 26: neg (3)\n                triceps > 26: pos (6)\n\n\nEvaluation on training data (537 cases):\n\n\t    Decision Tree   \n\t  ----------------  \n\t  Size      Errors  \n\n\t    16   81(15.1%)   <<\n\n\n\t   (a)   (b)    <-classified as\n\t  ----  ----\n\t   339    22    (a): class neg\n\t    59   117    (b): class pos\n\n\n\tAttribute usage:\n\n\t100.00%\tglucose\n\t 89.76%\tmass\n\t 75.79%\tage\n\t 31.66%\tpedigree\n\t 16.95%\tinsulin\n\t 15.64%\ttriceps\n\t  2.79%\tpregnant\n\n\nTime: 0.0 secs\n```\n\n\n:::\n:::\n\n\n\n\n\nplotを用いると、決定木の様子が可視化されます。(図がつぶれてしまうことがありますので、参考程度です)\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(model)\n```\n\n::: {.cell-output-display}\n![](C50_files/figure-html/unnamed-chunk-13-1.png){width=576}\n:::\n:::\n\n\n\n\n構築したモデルを使用して予測を行います。\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nres_pred <- predict(model, test.df[-tar.idx])\n```\n:::\n\n\n\n\n予測結果から得られる混同行列を確認します。  \n(Summaryにて訓練データでの混同行列が確認できるので、以下テストデータでの混同行列の表示を省略します)\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nres_act <- test.df[[tar.idx]]\nconf_mat <- table(res_act, res_pred)\nprint(conf_mat)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n       res_pred\nres_act neg pos\n    neg 116  23\n    pos  47  45\n```\n\n\n:::\n:::\n\n\n\n各種評価指標を確認します。計算用の関数の定義です。\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncreate_df_res <- function(cmat){\n  TN <- cmat[1,1]\n  FP <- cmat[1,2]\n  FN <- cmat[2,1]\n  TP <- cmat[2,2]\n  \n  # 正解率：どれだけ正しく分類できたかの割合\n  acc <- round((TP + TN) / (TP + TN + FN + FP), 3)\n  \n  # 適合率：陽性と判定されたものがどれだけ正しく陽性であるかの割合\n  prec <- round(TP / (TP + FP), 3)\n  \n  # 再現率（真陽性率）：実際に陽性のものをどれだけ正しく陽性と判定できたかの割合\n  rec <- round(TP / (TP + FN), 3)\n  \n  # F値：適合率と再現率の調和平均（両者はトレードオフの関係）\n  Fval <- round(2 * rec * prec / (rec + prec), 3)\n  \n  # 真陰性率：実際に陰性のものをどれだけ正しく陰性と判定できたかの割合\n  TNRat <- round(TN / (TN + FP), 3)\n  \n  df_rat <- data.frame(\n    Item = c(\"正解率\", \"適合率\", \"再現率（真陽性率）\", \"F値\", \"真陰性率\"), \n    Rate = c(acc, prec, rec, Fval, TNRat)\n  )\n  \n  df_rat\n}\n```\n:::\n\n\n\n\ndata.frameの出力整形用です。\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(knitr)\nlibrary(kableExtra)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\nAttaching package: 'kableExtra'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nThe following object is masked from 'package:dplyr':\n\n    group_rows\n```\n\n\n:::\n\n```{.r .cell-code}\nshow_df <- function(df, cap){\n  kable(df, format = \"pandoc\", caption = cap) %>%\n    kable_styling(full_width = FALSE, position = \"left\")\n}\n```\n:::\n\n\n\n各種指標を確認します。\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf_res <- create_df_res (conf_mat)\nshow_df(df_res, \"結果\")\n```\n\n::: {.cell-output-display}\n\n\nTable: 結果\n\nItem                   Rate\n-------------------  ------\n正解率                0.697\n適合率                0.662\n再現率（真陽性率）    0.489\nF値                   0.562\n真陰性率              0.835\n\n\n:::\n:::\n\n\n\n\n## C5.0のハイパーパラメーター\n以下、C5.0モデルのパラメータをいくつか変更し、モデル性能の差を簡易的に見てゆきます。\n\n### trials\ntrials:C5.0モデルはブースティングを実装しており、ブースティングの繰り返しの数を設定できます。\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmodel_trials <- C5.0(\n  x = train.df[-tar.idx], \n  y = train.df[[tar.idx]],\n  trials = 3\n)\n\nsummary(model_trials)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nCall:\nC5.0.default(x = train.df[-tar.idx], y = train.df[[tar.idx]], trials = 3)\n\n\nC5.0 [Release 2.07 GPL Edition]  \tFri Aug  1 17:34:31 2025\n-------------------------------\n\nClass specified by attribute `outcome'\n\nRead 537 cases (9 attributes) from undefined.data\n\n-----  Trial 0:  -----\n\nDecision tree:\n\nglucose <= 127:\n:...age <= 28:\n:   :...mass <= 32.2: neg (113/1)\n:   :   mass > 32.2:\n:   :   :...triceps > 8: neg (64/8)\n:   :       triceps <= 8:\n:   :       :...glucose <= 110: neg (7)\n:   :           glucose > 110: pos (4)\n:   age > 28:\n:   :...mass <= 26.3: neg (33/1)\n:       mass > 26.3:\n:       :...pedigree <= 0.845: neg (100/30)\n:           pedigree > 0.845:\n:           :...pregnant <= 1: neg (5/1)\n:               pregnant > 1: pos (10)\nglucose > 127:\n:...glucose <= 165:\n    :...mass <= 29.9: neg (55/15)\n    :   mass > 29.9:\n    :   :...insulin <= 196: pos (70/20)\n    :       insulin > 196:\n    :       :...age <= 32: neg (13/1)\n    :           age > 32: pos (8/1)\n    glucose > 165:\n    :...pedigree > 1.114: neg (5/2)\n        pedigree <= 1.114:\n        :...age > 27: pos (41/1)\n            age <= 27:\n            :...triceps <= 26: neg (3)\n                triceps > 26: pos (6)\n\n-----  Trial 1:  -----\n\nDecision tree:\n\nglucose > 154: pos (75.3/15.4)\nglucose <= 154:\n:...mass <= 26.3: neg (96.8/8.6)\n    mass > 26.3:\n    :...age <= 28:\n        :...pressure <= 44: pos (9.1/2.4)\n        :   pressure > 44: neg (150.8/33.5)\n        age > 28:\n        :...insulin <= 142: neg (163.6/79.5)\n            insulin > 142: pos (41.4/9.3)\n\n-----  Trial 2:  -----\n\nDecision tree:\n\nglucose <= 120: neg (213.2/29.8)\nglucose > 120:\n:...mass <= 29.9:\n    :...age <= 25: neg (19.5)\n    :   age > 25:\n    :   :...glucose <= 164: neg (47.7/15.6)\n    :       glucose > 164: pos (6.8)\n    mass > 29.9:\n    :...pedigree <= 0.315:\n        :...age <= 30: neg (22.9/2.1)\n        :   age > 30: pos (36.5/13.9)\n        pedigree > 0.315:\n        :...pressure <= 66: pos (29.6/3.3)\n            pressure > 66:\n            :...age > 49: pos (19.1/2.3)\n                age <= 49:\n                :...insulin > 465: neg (5.4)\n                    insulin <= 465:\n                    :...mass > 46.8: pos (10.3)\n                        mass <= 46.8:\n                        :...glucose <= 123: neg (5.8)\n                            glucose > 123:\n                            :...pressure <= 70: pos (11.2/0.7)\n                                pressure > 70:\n                                :...glucose > 156: pos (14.7/2.3)\n                                    glucose <= 156:\n                                    :...glucose <= 132: pos (16.6/3.5)\n                                        glucose > 132: neg (32.9/11.4)\n\n\nEvaluation on training data (537 cases):\n\nTrial\t    Decision Tree   \n-----\t  ----------------  \n\t  Size      Errors  \n\n   0\t    16   81(15.1%)\n   1\t     6  110(20.5%)\n   2\t    15   94(17.5%)\nboost\t         79(14.7%)   <<\n\n\n\t   (a)   (b)    <-classified as\n\t  ----  ----\n\t   349    12    (a): class neg\n\t    67   109    (b): class pos\n\n\n\tAttribute usage:\n\n\t100.00%\tglucose\n\t100.00%\tmass\n\t 99.81%\tage\n\t 51.40%\tpedigree\n\t 46.55%\tpressure\n\t 45.81%\tinsulin\n\t 15.64%\ttriceps\n\t  2.79%\tpregnant\n\n\nTime: 0.0 secs\n```\n\n\n:::\n:::\n\n\n\n\n結果を確認します。各種数値が向上していることが分かります。\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nres_trials_pred <- predict(model_trials, test.df[-tar.idx])\nconf_mat_trials <- table(res_act, res_trials_pred)\ndf_res_trials <- create_df_res(conf_mat_trials)\nshow_df(df_res_trials, \"結果（trials）\")\n```\n\n::: {.cell-output-display}\n\n\nTable: 結果（trials）\n\nItem                   Rate\n-------------------  ------\n正解率                0.740\n適合率                0.750\n再現率（真陽性率）    0.522\nF値                   0.616\n真陰性率              0.885\n\n\n:::\n:::\n\n\n\n\n### winnow\nwinnow：デフォルトはFALSEです。TRUEにすると、重要でない特徴量を削減してくれます。  \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmodel_winnow <- C5.0(\n  x = train.df[-tar.idx], \n  y = train.df[[tar.idx]],\n　control = C5.0Control(winnow = TRUE)\n)\n\nsummary(model_winnow)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nCall:\nC5.0.default(x = train.df[-tar.idx], y = train.df[[tar.idx]], control\n = C5.0Control(winnow = TRUE))\n\n\nC5.0 [Release 2.07 GPL Edition]  \tFri Aug  1 17:34:32 2025\n-------------------------------\n\nClass specified by attribute `outcome'\n\nRead 537 cases (9 attributes) from undefined.data\n\n4 attributes winnowed\nEstimated importance of remaining attributes:\n\n     29%  glucose\n      5%  age\n      1%  insulin\n     <1%  pedigree\n\nDecision tree:\n\nglucose <= 127: neg (336/55)\nglucose > 127:\n:...glucose > 165: pos (55/7)\n    glucose <= 165:\n    :...age <= 23: neg (25/5)\n        age > 23:\n        :...pedigree > 0.722: pos (21/3)\n            pedigree <= 0.722:\n            :...pedigree > 0.661: neg (6)\n                pedigree <= 0.661:\n                :...pedigree <= 0.305: neg (48/19)\n                    pedigree > 0.305: pos (46/15)\n\n\nEvaluation on training data (537 cases):\n\n\t    Decision Tree   \n\t  ----------------  \n\t  Size      Errors  \n\n\t     7  104(19.4%)   <<\n\n\n\t   (a)   (b)    <-classified as\n\t  ----  ----\n\t   336    25    (a): class neg\n\t    79    97    (b): class pos\n\n\n\tAttribute usage:\n\n\t100.00%\tglucose\n\t 27.19%\tage\n\t 22.53%\tpedigree\n\n\nTime: 0.0 secs\n```\n\n\n:::\n:::\n\n\n\n\n結果の確認です。最初のモデルよりも正解率は高いですが、F値は下がりました。\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nres_winnow_pred <- predict(model_winnow, test.df[-tar.idx])\nconf_mat_winnow <- table(res_act, res_winnow_pred)\ndf_res_winnow <- create_df_res(conf_mat_winnow)\nshow_df(df_res_winnow, \"結果（winnow）\")\n```\n\n::: {.cell-output-display}\n\n\nTable: 結果（winnow）\n\nItem                   Rate\n-------------------  ------\n正解率                0.710\n適合率                0.736\n再現率（真陽性率）    0.424\nF値                   0.538\n真陰性率              0.899\n\n\n:::\n:::\n\n\n\n\n### CF\nCF：信頼係数です。デフォルトは0.25です。小さくすると過学習を防いでくれます。\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmodel_CF <- C5.0(\n  x = train.df[-tar.idx], \n  y = train.df[[tar.idx]],\n  control = C5.0Control(CF = 0.1)\n)\n\nsummary(model_CF)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nCall:\nC5.0.default(x = train.df[-tar.idx], y = train.df[[tar.idx]], control\n = C5.0Control(CF = 0.1))\n\n\nC5.0 [Release 2.07 GPL Edition]  \tFri Aug  1 17:34:32 2025\n-------------------------------\n\nClass specified by attribute `outcome'\n\nRead 537 cases (9 attributes) from undefined.data\n\nDecision tree:\n\nglucose <= 127:\n:...age <= 28: neg (188/13)\n:   age > 28:\n:   :...mass <= 26.3: neg (33/1)\n:       mass > 26.3:\n:       :...pedigree <= 0.845: neg (100/30)\n:           pedigree > 0.845: pos (15/4)\nglucose > 127:\n:...glucose > 165: pos (55/7)\n    glucose <= 165:\n    :...mass <= 29.9: neg (55/15)\n        mass > 29.9:\n        :...insulin <= 196: pos (70/20)\n            insulin > 196:\n            :...age <= 32: neg (13/1)\n                age > 32: pos (8/1)\n\n\nEvaluation on training data (537 cases):\n\n\t    Decision Tree   \n\t  ----------------  \n\t  Size      Errors  \n\n\t     9   92(17.1%)   <<\n\n\n\t   (a)   (b)    <-classified as\n\t  ----  ----\n\t   329    32    (a): class neg\n\t    60   116    (b): class pos\n\n\n\tAttribute usage:\n\n\t100.00%\tglucose\n\t 66.48%\tage\n\t 54.75%\tmass\n\t 21.42%\tpedigree\n\t 16.95%\tinsulin\n\n\nTime: 0.0 secs\n```\n\n\n:::\n:::\n\n\n\n\n結果の確認です。最初のモデルよりも性能が向上しています。\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nres_CF_pred <- predict(model_CF, test.df[-tar.idx])\nconf_mat_CF <- table(res_act, res_CF_pred)\ndf_res_CF <- create_df_res(conf_mat_CF)\nshow_df(df_res_CF, \"結果（CF）\")\n```\n\n::: {.cell-output-display}\n\n\nTable: 結果（CF）\n\nItem                   Rate\n-------------------  ------\n正解率                0.723\n適合率                0.684\n再現率（真陽性率）    0.565\nF値                   0.619\n真陰性率              0.827\n\n\n:::\n:::\n\n\n\n\n### minCases\nminCases：葉ノードに含まれる必要サンプル数です。デフォルトは2です。大きくすると過学習を防いでくれます。\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmodel_minCases <- C5.0(\n  x = train.df[-tar.idx], \n  y = train.df[[tar.idx]],\n  control = C5.0Control(minCases = 15)\n)\n\nsummary(model_minCases)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nCall:\nC5.0.default(x = train.df[-tar.idx], y = train.df[[tar.idx]], control\n = C5.0Control(minCases = 15))\n\n\nC5.0 [Release 2.07 GPL Edition]  \tFri Aug  1 17:34:32 2025\n-------------------------------\n\nClass specified by attribute `outcome'\n\nRead 537 cases (9 attributes) from undefined.data\n\nDecision tree:\n\nglucose <= 127:\n:...age <= 28: neg (188/13)\n:   age > 28:\n:   :...mass <= 26.3: neg (33/1)\n:       mass > 26.3:\n:       :...pedigree <= 0.845: neg (100/30)\n:           pedigree > 0.845: pos (15/4)\nglucose > 127:\n:...glucose > 165: pos (55/7)\n    glucose <= 165:\n    :...mass <= 29.9: neg (55/15)\n        mass > 29.9:\n        :...pregnant > 7: pos (18/2)\n            pregnant <= 7:\n            :...insulin <= 196: pos (56/18)\n                insulin > 196: neg (17/4)\n\n\nEvaluation on training data (537 cases):\n\n\t    Decision Tree   \n\t  ----------------  \n\t  Size      Errors  \n\n\t     9   94(17.5%)   <<\n\n\n\t   (a)   (b)    <-classified as\n\t  ----  ----\n\t   330    31    (a): class neg\n\t    63   113    (b): class pos\n\n\n\tAttribute usage:\n\n\t100.00%\tglucose\n\t 62.57%\tage\n\t 54.75%\tmass\n\t 21.42%\tpedigree\n\t 16.95%\tpregnant\n\t 13.59%\tinsulin\n\n\nTime: 0.0 secs\n```\n\n\n:::\n:::\n\n\n\n\n結果の確認です。最初のモデルよりも性能が向上しています。\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nres_minCases_pred <- predict(model_minCases, test.df[-tar.idx])\nconf_mat_minCases <- table(res_act, res_minCases_pred)\ndf_res_minCases <- create_df_res(conf_mat_minCases)\nshow_df(df_res_minCases, \"結果（minCases）\")\n```\n\n::: {.cell-output-display}\n\n\nTable: 結果（minCases）\n\nItem                   Rate\n-------------------  ------\n正解率                0.727\n適合率                0.699\n再現率（真陽性率）    0.554\nF値                   0.618\n真陰性率              0.842\n\n\n:::\n:::\n\n\n\n\n各モデルの結果を一覧にします。\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf_res_all <- data.frame(\n  Item = df_res[,1],\n  default = df_res[, 2], \n  trials = df_res_trials[,2], \n  winnow = df_res_winnow[,2], \n  CF = df_res_CF[,2],\n  minCases = df_res_minCases[,2])\nshow_df(df_res_all, \"各モデルの結果一覧\")\n```\n\n::: {.cell-output-display}\n\n\nTable: 各モデルの結果一覧\n\nItem                  default   trials   winnow      CF   minCases\n-------------------  --------  -------  -------  ------  ---------\n正解率                  0.697    0.740    0.710   0.723      0.727\n適合率                  0.662    0.750    0.736   0.684      0.699\n再現率（真陽性率）      0.489    0.522    0.424   0.565      0.554\nF値                     0.562    0.616    0.538   0.619      0.618\n真陰性率                0.835    0.885    0.899   0.827      0.842\n\n\n:::\n:::\n",
    "supporting": [
      "C50_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}