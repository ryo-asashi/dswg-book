{
  "hash": "d48323693c70928d70462455c307dee1",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"randomForest\"\nauthor: \"データサイエンス関連基礎調査WG\"\ndate: \"2025-08-01\"\nformat:   \n  html:\n    toc: true\n    toc-depth: 3\n    fig-width: 6\n    fig-height: 3\n---\n\n\n\n\n\n\n## パッケージの概要\n\n機械学習におけるRandomForestモデルを構築できます。RandomForestモデルとは、多数の決定木を集めてそれらの予測値よりモデル全体の予測値を算出する、アンサンブルモデルの一種です。\n\n## 参考URL\n\n<https://momonoki2017.blogspot.com/2018/04/r007-riris.html>\n\n## 使用例：irisデータの分類\n\nirisデータを用いて、がく弁・花弁の長さ・幅の情報からアヤメの種類を特定するRandomForestモデルをrandomForestパッケージを用いて構築します。\n\n### irisデータセットを読み込む\n\nirisデータを読み込み、データの先頭を表示します。\n\n-   Sepal.Length：がく弁の長さ\n-   Sepal.Width：がく弁の幅\n-   Petal.Length：花弁の長さ\n-   Petal.Width：花弁の幅\n\nアヤメの種類はsetosa(1)、versicolor(2)、virginica(3)の3種類です。\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata(iris)\nhead(iris)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  Sepal.Length Sepal.Width Petal.Length Petal.Width Species\n1          5.1         3.5          1.4         0.2  setosa\n2          4.9         3.0          1.4         0.2  setosa\n3          4.7         3.2          1.3         0.2  setosa\n4          4.6         3.1          1.5         0.2  setosa\n5          5.0         3.6          1.4         0.2  setosa\n6          5.4         3.9          1.7         0.4  setosa\n```\n\n\n:::\n:::\n\n\n\n\n### irisデータの構造\n\nirisデータの各種構造を確認します。\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nstr(iris)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n'data.frame':\t150 obs. of  5 variables:\n $ Sepal.Length: num  5.1 4.9 4.7 4.6 5 5.4 4.6 5 4.4 4.9 ...\n $ Sepal.Width : num  3.5 3 3.2 3.1 3.6 3.9 3.4 3.4 2.9 3.1 ...\n $ Petal.Length: num  1.4 1.4 1.3 1.5 1.4 1.7 1.4 1.5 1.4 1.5 ...\n $ Petal.Width : num  0.2 0.2 0.2 0.2 0.2 0.4 0.3 0.2 0.2 0.1 ...\n $ Species     : Factor w/ 3 levels \"setosa\",\"versicolor\",..: 1 1 1 1 1 1 1 1 1 1 ...\n```\n\n\n:::\n:::\n\n\n\n\nまた、データを散布図にプロットして確認します。\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(iris, col=c(2, 3, 4)[iris$Species])\n```\n\n::: {.cell-output-display}\n![](randomForest_files/figure-html/unnamed-chunk-3-1.png){width=576}\n:::\n:::\n\n\n\n\n### モデル構築1（全体データ）\n\nまずは全てのデータを使ってRandomForestモデルを構築してみます。\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n(iris.rf <- randomForest(Species ~ ., data = iris))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nCall:\n randomForest(formula = Species ~ ., data = iris) \n               Type of random forest: classification\n                     Number of trees: 500\nNo. of variables tried at each split: 2\n\n        OOB estimate of  error rate: 4%\nConfusion matrix:\n           setosa versicolor virginica class.error\nsetosa         50          0         0        0.00\nversicolor      0         47         3        0.06\nvirginica       0          3        47        0.06\n```\n\n\n:::\n:::\n\n\n\n\n#### 重要度の確認\n\nデータの各特徴量の重要度を確認することが出来ます。irisデータの分類には花弁の長さ・花弁の幅の情報が重要であることが分かります。\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nimportance(iris.rf)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n             MeanDecreaseGini\nSepal.Length         9.937619\nSepal.Width          2.440018\nPetal.Length        40.254780\nPetal.Width         46.644024\n```\n\n\n:::\n:::\n\n\n\n\n### モデル構築2（訓練データとテストデータに分割）\n\nirisデータをモデル生成のための訓練データと、モデル評価のためのテストデータに分割します。データ割合は訓練データを7割、テストデータを3割とします。確認のため、データサイズを出力します。\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# 再現性のためにシードを設定\nset.seed(123)  \n\n# データの分割\nsample_indices <- sample(1:nrow(iris), 0.7 * nrow(iris))  \ndf.train <- iris[sample_indices, ]\ndf.test <- iris[-sample_indices, ]\n\n# データサイズの確認\nc(nrow(iris), nrow(df.train), nrow(df.test))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 150 105  45\n```\n\n\n:::\n:::\n\n\n\n\n#### モデル生成\n訓練データを用いてRandomFOrestモデルを生成します。\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n(model.rf <- randomForest(Species ~ ., data = df.train))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nCall:\n randomForest(formula = Species ~ ., data = df.train) \n               Type of random forest: classification\n                     Number of trees: 500\nNo. of variables tried at each split: 2\n\n        OOB estimate of  error rate: 5.71%\nConfusion matrix:\n           setosa versicolor virginica class.error\nsetosa         36          0         0  0.00000000\nversicolor      0         29         3  0.09375000\nvirginica       0          3        34  0.08108108\n```\n\n\n:::\n:::\n\n\n\n\n#### モデル評価\nテストデータを使ってモデル評価を行います。まずはテストデータを元に生成したモデルを用いて予測結果を算出します。\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nprediction <- predict(model.rf, df.test)\n```\n:::\n\n\n\n\n予測結果とテストデータのもともとのアヤメの分類とを比較します。おおむね正しく分類できていることが分かります。\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n(result <- table(prediction, df.test$Species))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n            \nprediction   setosa versicolor virginica\n  setosa         14          0         0\n  versicolor      0         17         0\n  virginica       0          1        13\n```\n\n\n:::\n\n```{.r .cell-code}\n(accuracy_prediction <- sum(diag(result)) / sum(result))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.9777778\n```\n\n\n:::\n:::\n",
    "supporting": [
      "randomForest_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}