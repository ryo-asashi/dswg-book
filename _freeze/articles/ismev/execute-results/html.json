{
  "hash": "9f7119c0a730644efdc28bca9f10bde4",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"ismev\"\nauthor: \"データサイエンス関連基礎調査WG\"\ndate: \"2025-08-01\"\nformat:\n  html:\n    toc: true\n    toc-depth: 3\n    fig-width: 6\n    fig-height: 5\n---\n\n\n\n\n\n\n## パッケージの概要\n\nismevは、極値理論に基づく統計解析を行うためのパッケージです。\nStuart Colesによる極値理論を紹介する著書『An Introduction to Statistical Modeling of Extreme Values』に登場する計算をサポートする関数が含まれています。\n極値理論は、分布から大きく外れるような極端な事象をモデル化するための手法であり、保険分野においても、再保険や巨大自然災害リスクの分析、リスク管理でのテイル評価等に利用されています。\n\n\n\n\n\n\n\n\n\n## ブロック最大値モデル\n\nブロック最大値モデルは、同一分布からの独立な標本の最大値の確率的性質を扱うモデルです。\nここでは、ismevパッケージに入っているportpirieのデータセットを使って、一般化極値分布（GEV）のフィッティングを行います。\nportpirieは、65行2列で構成されるデータセットであり、1923年から1987年までの南オーストラリアのポートピリーで記録された年間最大海面水位を示しています。1列目は対応する年を示しています。年ごとの最大値のデータとなっているため、このままGEVのフィッティングを行います。フィッティングにはgev.fit関数を使います。\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# データセット\"portpirie\"を取得\ndata(portpirie)\nhead(portpirie)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  Year SeaLevel\n1 1923     4.03\n2 1924     3.83\n3 1925     3.65\n4 1926     3.88\n5 1927     4.01\n6 1928     4.08\n```\n\n\n:::\n\n```{.r .cell-code}\n# ヒストグラムを表示\nhist(portpirie$SeaLevel)\n```\n\n::: {.cell-output-display}\n![](ismev_files/figure-html/GEV1-1.png){width=576}\n:::\n\n```{.r .cell-code}\n# \"portpirie\"の年間最大海面水位についてGEVフィッティング\nfit_portpirie <- gev.fit(portpirie$SeaLevel)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n$conv\n[1] 0\n\n$nllh\n[1] -4.339058\n\n$mle\n[1]  3.87474692  0.19804120 -0.05008773\n\n$se\n[1] 0.02793211 0.02024610 0.09825633\n```\n\n\n:::\n:::\n\n\n\n\ngev.fit関数によるフィッティング結果の見方は次のとおりです。\n\n\n-   $conv \n    *   収束のステータスを表しています。0の場合は収束したことを意味し、最適なパラメータが見つかり、アルゴリズムが正常終了したことを示します。 \n-   $nllh \n    *   負の対数尤度です。GEV分布のパラメータを推定する際に、尤度関数を最大化しますが、この値はその最大化した尤度関数の対数を負にしたものです。この値が小さいほど、データに適合したモデルであることを示します。 \n-   $mle\n\n    *   GEV分布の推定されたパラメータ（最尤推定値、MLE）です。順番に、位置パラメータ（location）$\\mu$、尺度パラメータ（scale）$\\sigma$、形状パラメータ（shape）$\\xi$の値を示しています。\n-   $se\n    *   各パラメータの標準誤差です。最尤推定値の不確実性を示しており、値が小さいほど、推定値がより正確であることを意味します。\n    \n    \n次に、gev.diag関数を用いて、先ほど作成したGEVモデルについて、データに適合しているかどうかを視覚的および統計的に評価します。\ngev.diag関数により、P-Pプロット、Q-Qプロット、再現レベルプロット、データのヒストグラムと適合した密度を出力することができます。\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngev.diag(fit_portpirie)\n```\n\n::: {.cell-output-display}\n![](ismev_files/figure-html/GEV2-1.png){width=576}\n:::\n:::\n\n\n\n\n次に、指数分布に従う乱数から作成した最大値のデータに対して、GEVフィッティングを行います。理論的には、最大値$M_n$を正規化した値$Z_n$はグンベル分布に法則収束するはずです。\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# シード値を設定\nset.seed(1234)\n\n# λ = 2 の指数分布に従う乱数を100万個生成\nN <- 1000000\nlambda <- 2\nrandom_exp <- rexp(N, rate = lambda)\n\n# ヒストグラムを表示\nhist(random_exp)\n```\n\n::: {.cell-output-display}\n![](ismev_files/figure-html/GEV3-1.png){width=576}\n:::\n\n```{.r .cell-code}\n# 1000個ずつのブロックに分けて、各ブロックの最大値を計算\nn <- 1000\nmax_exp <- tapply(random_exp, (seq_along(random_exp) - 1) %/% n + 1, max)\n\n# 各ブロックの最大値M_nをデータフレームに格納\ndf_max_exp <- data.frame(Block = 1:length(max_exp), M_n = max_exp)\n\n# M_nを正規化した値Z_nをデータフレームに格納\nd_n <- log(n) / lambda\nc_n <- 1 / lambda\ndf_max_exp$Z_n <- (df_max_exp$M_n - d_n) / c_n\n\n# データフレームの最初の数行を表示\nhead(df_max_exp)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  Block      M_n        Z_n\n1     1 3.633542  0.3593291\n2     2 3.730824  0.5538925\n3     3 3.123590 -0.6605744\n4     4 3.188098 -0.5315598\n5     5 3.621496  0.3352366\n6     6 3.186516 -0.5347237\n```\n\n\n:::\n\n```{.r .cell-code}\n# 生成したデータフレームについてGEVフィッティング\nfit_max_exp <- gev.fit(df_max_exp$Z_n)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n$conv\n[1] 0\n\n$nllh\n[1] 1578.983\n\n$mle\n[1] -0.043063270  0.996804717  0.006797281\n\n$se\n[1] 0.03540953 0.02575965 0.02287590\n```\n\n\n:::\n\n```{.r .cell-code}\n# フィッティング結果を評価\ngev.diag(fit_max_exp)\n```\n\n::: {.cell-output-display}\n![](ismev_files/figure-html/GEV3-2.png){width=576}\n:::\n:::\n\n\n\n\n$\\mu \\fallingdotseq 0$、$\\sigma\\fallingdotseq 1$、$\\xi\\fallingdotseq 0$となり、グンベル分布が概ね再現できました。\n\n## 閾値超過モデル\n\n閾値超過モデルはある閾値を超過したデータを対象とするモデルです。\n先ほど生成した指数分布に従う乱数データを用いて、閾値超過モデルである一般化パレート分布（GPD）のフィッティングを行います。\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# 乱数データをデータフレームに格納\ndf_random_exp <- data.frame(X = random_exp)\n\n# 結果を確認\nhead(df_random_exp)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n            X\n1 1.250879302\n2 0.123379442\n3 0.003290978\n4 0.871373045\n5 0.193591292\n6 0.044974836\n```\n\n\n:::\n\n```{.r .cell-code}\n# 閾値を設定\nu <- 3\n\n# 生成したデータフレームについてGPDフィッティング\nfit_excess_exp <- gpd.fit(df_random_exp$X, u)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n$threshold\n[1] 3\n\n$nexc\n[1] 2378\n\n$conv\n[1] 0\n\n$nllh\n[1] 740.2906\n\n$mle\n[1]  0.504669635 -0.004868447\n\n$rate\n[1] 0.002378\n\n$se\n[1] 0.01463252 0.02049923\n```\n\n\n:::\n:::\n\n\n\n\ngpd.fit関数によるフィッティング結果の見方は、gev.fit関数と共通する箇所もありますが、次のとおりです。形状パラメータ$\\xi$が0に近い数値となっており、想定どおり指数分布の形状を示す結果となっています。\n\n\n-   $threshold \n    *   引数にて設定した閾値です。 \n-   $nexc \n    *   閾値を超えたデータの件数を示します。閾値を超えたデータのみがGPDのフィットに使用されます。 \n-   $conv \n    *   gev.fit関数と同じく収束のステータスを表しています。0の場合は収束したことを意味します。 \n-   $nllh \n    *   gev.fit関数と同じく負の対数尤度であり、この値が小さいほど、データに適合したモデルであることを示します。 \n-   $mle\n\n    *   GPDの推定されたパラメータ（最尤推定値、MLE）です。順番に、尺度パラメータ（scale）$\\sigma$、形状パラメータ（shape）$\\xi$の値を示しています。GEVと異なり、位置パラメータはありません。\n-   $rate\n    *   閾値を超えたデータの割合です。\n-   $se\n    *   gev.fit関数と同じく各パラメータの標準誤差であり、値が小さいほど、推定値がより正確であることを意味します。\n\n\nGPDにおいても、次のとおりgpd.diag関数により作成したモデルについて評価することが可能です。出力内容はgev.diagと同じです。\n    \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# フィッティング結果を評価\ngpd.diag(fit_excess_exp)\n```\n\n::: {.cell-output-display}\n![](ismev_files/figure-html/GPD2-1.png){width=576}\n:::\n:::\n\n\n\n\ngpd.fit関数では閾値を自分で設定する必要があります。適切な閾値を選択する方法はいくつか考えられますが、gpd.fitrange関数を使えば、異なる閾値に対してGPDを適合させ、パラメータの推定値の変化を調べることができます。2つのパラメータが安定するように閾値を設定することでより信頼性の高いフィッティングが可能になります。\n    \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# 閾値が2～5の場合のパラメータ推定値を出力\ngpd.fitrange(df_random_exp$X, 2, 5)\n```\n\n::: {.cell-output-display}\n![](ismev_files/figure-html/GPD3-1.png){width=576}\n:::\n:::\n\n\n\n\n上記の結果では、閾値が4に差し掛かる辺りから信頼区間が急激に広がり不安定になることがわかります。このため、3～3.5の辺りで閾値を設定することが考えられます。\n\n## 参考資料\n\n[1] Stuart Coles. [An Introduction to Statistical Modeling of Extreme Values](https://link.springer.com/book/10.1007/978-1-4471-3675-0).  \n[2] 日本アクチュアリー会. [損保数理](https://www.actuaries.jp/examin/textbook/pdf/sonpo-suuri.pdf).  \n\n",
    "supporting": [
      "ismev_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}