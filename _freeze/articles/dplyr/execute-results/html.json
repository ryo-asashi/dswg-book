{
  "hash": "dddd514d467cd49ba4cb9b3fa38bced1",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"dplyr\"\nauthor: \"データサイエンス関連基礎調査WG\"\ndate: \"2025-08-01\"\nformat: html\n---\n\n\n\n\n\n\n## パッケージの概要\n\ndplyrパッケージは、データフレームに対する「特定の行・列の抽出」や「ソート」などの重要な操作を、とてもシンプルなコードで実現するための関数を備えています。規模の大きなデータを扱うことの多いアクチュアリーにとって、必要不可欠なパッケージの一つです。\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(dplyr)\n```\n:::\n\n\n\n\n## パイプ演算子でコードを簡略化する\n\ndplyrパッケージを呼び出すと、magrittrパッケージが提供するパイプ演算子（%\\>%）も使えるようになります。この演算子は、左側にあるオブジェクトを、右側の関数の未指定の引数のうち一番最初のものに代入した結果を返します。\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# irisデータの先頭3行を表示\niris  %>% slice_head(n = 3)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  Sepal.Length Sepal.Width Petal.Length Petal.Width Species\n1          5.1         3.5          1.4         0.2  setosa\n2          4.9         3.0          1.4         0.2  setosa\n3          4.7         3.2          1.3         0.2  setosa\n```\n\n\n:::\n:::\n\n\n\n\nなお、バージョン 4.1.0 以降の R には、標準演算子の一つとしてパイプ演算子 \"\\|\\>\" が追加されています。\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# バージョン 4.1.0 以降でのみ利用可能\niris |> slice_tail(n = 3)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  Sepal.Length Sepal.Width Petal.Length Petal.Width   Species\n1          6.5         3.0          5.2         2.0 virginica\n2          6.2         3.4          5.4         2.3 virginica\n3          5.9         3.0          5.1         1.8 virginica\n```\n\n\n:::\n:::\n\n\n\n\nデータフレームに対して多くの操作を重ねたいとき、パイプ演算子を活用すれば、多重括弧による入れ子構造を避けて可読性の高いコードを書くことができます。\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\niris %>%\n  select(Species, Sepal.Length, Sepal.Width) %>%\n  mutate(Sepal.Ratio　=　round(Sepal.Length / Sepal.Width, 3)) %>%\n  group_by(Species) %>%\n  arrange(Sepal.Ratio) %>%\n  slice_head()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 3 × 4\n# Groups:   Species [3]\n  Species    Sepal.Length Sepal.Width Sepal.Ratio\n  <fct>             <dbl>       <dbl>       <dbl>\n1 setosa              5.2         4.1        1.27\n2 versicolor          6           3.4        1.76\n3 virginica           6.2         3.4        1.82\n```\n\n\n:::\n:::\n\n\n\n\n## データフレームから指定した列を抽出する\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\niris %>%\n  select(Species, Sepal.Width, Petal.Width) %>%\n  slice_tail(n=3)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n    Species Sepal.Width Petal.Width\n1 virginica         3.0         2.0\n2 virginica         3.4         2.3\n3 virginica         3.0         1.8\n```\n\n\n:::\n:::\n\n\n\n\n## データフレームから条件を満たす行を抽出する\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\niris %>%\n  filter(Sepal.Width == 2.8, Petal.Width == 1.3)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  Sepal.Length Sepal.Width Petal.Length Petal.Width    Species\n1          5.7         2.8          4.5         1.3 versicolor\n2          6.1         2.8          4.0         1.3 versicolor\n3          5.7         2.8          4.1         1.3 versicolor\n```\n\n\n:::\n:::\n\n\n\n\n## データフレームの行をソートする\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\niris %>%\n  arrange(Sepal.Length, Sepal.Width) %>% slice_head(n=3)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  Sepal.Length Sepal.Width Petal.Length Petal.Width Species\n1          4.3         3.0          1.1         0.1  setosa\n2          4.4         2.9          1.4         0.2  setosa\n3          4.4         3.0          1.3         0.2  setosa\n```\n\n\n:::\n:::\n\n\n\n\n## データフレームの列を作成する\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\niris %>%\n  mutate(Sepal.Ratio=round(Sepal.Length / Sepal.Width, 3)) %>%\n  slice_head(n=3)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  Sepal.Length Sepal.Width Petal.Length Petal.Width Species Sepal.Ratio\n1          5.1         3.5          1.4         0.2  setosa       1.457\n2          4.9         3.0          1.4         0.2  setosa       1.633\n3          4.7         3.2          1.3         0.2  setosa       1.469\n```\n\n\n:::\n:::\n\n\n\n\n## データを要約する\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\niris %>% summarize(n_distinct(Sepal.Length),\n                   mean(Sepal.Length),\n                   max(Sepal.Length),\n                   sum(log(Sepal.Width)))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  n_distinct(Sepal.Length) mean(Sepal.Length) max(Sepal.Length)\n1                       35           5.843333               7.9\n  sum(log(Sepal.Width))\n1              166.1159\n```\n\n\n:::\n:::\n\n\n\n\n## データフレームをグループ化して集計する\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\niris %>%\n  group_by(Species) %>%\n  summarize(n(), mean(Sepal.Length), sd(Sepal.Length))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 3 × 4\n  Species    `n()` `mean(Sepal.Length)` `sd(Sepal.Length)`\n  <fct>      <int>                <dbl>              <dbl>\n1 setosa        50                 5.01              0.352\n2 versicolor    50                 5.94              0.516\n3 virginica     50                 6.59              0.636\n```\n\n\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}