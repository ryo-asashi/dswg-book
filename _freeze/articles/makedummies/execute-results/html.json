{
  "hash": "cbcbca769fe18eafb290117871d9042f",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"makedummies\"\nauthor: \"データサイエンス関連基礎調査WG\"\ndate: \"2025-08-01\"\nformat:\n  html:\n    toc: true\n    toc-depth: 4\n    fig-width: 6\n    fig-height: 5\n    df-print: \"paged\"\n    embed-resources: true\nreferences:\n- id: BIB_BOOK_CAR\n  type: book\n  publisher: Springer\n  title: An R Companion to Applied Regression, Third Edition\n  author:\n    - John Fox\n    - Sanford Weisberg\n  issued:\n    date-parts:\n    - - 2018\n      - 10\nnocite: |\n  @*\n---\n\n\n\n\n\n::: {.cell}\n<style type=\"text/css\">\n.output-jp > code {\n/*一部日本語出力があるチャンクで日本語と英字の幅が揃わずに表示がずれるため、CSSでフォントを変更することで表示を揃える*/\n  font-family: \"ＭＳ ゴシック\";\n}\n</style>\n:::\n\n\n\n\n## パッケージの概要\n\nmakedummiesパッケージは、データフレームのfactor型変数(カテゴリ変数)をダミー変数化する関数を提供します。\n簡単な指定で一度に複数の列を加工することが出来る点が特徴です。\n\n\n## 準備\n\n### パッケージの読み込み\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(makedummies)\nlibrary(carData) #データセット\n```\n:::\n\n\n\n\n\n### データセットの読み込み\n\n@BIB_BOOK_CAR で使用されたデータセット等をまとめたパッケージcarDataに含まれる、\nWVSというデータセットを使用します。\n\n\n1995～1997年にオーストラリア、ノルウェー、スウェーデン、アメリカにて実施されたアンケート調査で、\n貧困層への政策に対する評価と、年齢、性別などの回答者の属性からなる6つの列で構成されたデータセットです。\nサンプル数は5,381件です。\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata(\"WVS\")\ndf_all <- WVS\nstr(df_all)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n'data.frame':\t5381 obs. of  6 variables:\n $ poverty : Ord.factor w/ 3 levels \"Too Little\"<\"About Right\"<..: 1 2 1 3 1 2 3 1 1 1 ...\n $ religion: Factor w/ 2 levels \"no\",\"yes\": 2 2 2 2 2 2 2 2 2 2 ...\n $ degree  : Factor w/ 2 levels \"no\",\"yes\": 1 1 1 2 2 1 1 1 1 1 ...\n $ country : Factor w/ 4 levels \"Australia\",\"Norway\",..: 4 4 4 4 4 4 4 4 4 4 ...\n $ age     : int  44 40 36 25 39 80 48 32 74 30 ...\n $ gender  : Factor w/ 2 levels \"female\",\"male\": 2 1 1 1 2 1 1 2 1 2 ...\n```\n\n\n:::\n:::\n\n\n\n各列の内容は次のとおりで、`age`以外はfactor型変数(カテゴリ変数)であることがわかります。\n\n| 列名 | 型 | 説明 |\n|------|------|----------------------|\n| poverty | 順序付きfactor型 | この国の政府が貧困層に対して行っていることは、適切だと思うか、多すぎるか、少なすぎるか？という問いへの答え : Too Little < About Right < Too Much の3通り |\n| religion | factor型 | 宗教の信者かどうか : no または yes |\n| degree | factor型 | 大学の学位を取得しているかどうか : no または yes |\n| country | factor型 | 国 : Austraila, Norway, Sweden, USA の4通り |\n| age | 整数型 | 年齢(歳) |\n| gender | factor型 | 性別 : male または female |\n\n冒頭6行のレコード、およびサマリーを確認すると次のとおり。\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhead(df_all)\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"\"],\"name\":[\"_rn_\"],\"type\":[\"\"],\"align\":[\"left\"]},{\"label\":[\"poverty\"],\"name\":[1],\"type\":[\"ord\"],\"align\":[\"right\"]},{\"label\":[\"religion\"],\"name\":[2],\"type\":[\"fct\"],\"align\":[\"left\"]},{\"label\":[\"degree\"],\"name\":[3],\"type\":[\"fct\"],\"align\":[\"left\"]},{\"label\":[\"country\"],\"name\":[4],\"type\":[\"fct\"],\"align\":[\"left\"]},{\"label\":[\"age\"],\"name\":[5],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"gender\"],\"name\":[6],\"type\":[\"fct\"],\"align\":[\"left\"]}],\"data\":[{\"1\":\"Too Little\",\"2\":\"yes\",\"3\":\"no\",\"4\":\"USA\",\"5\":\"44\",\"6\":\"male\",\"_rn_\":\"1\"},{\"1\":\"About Right\",\"2\":\"yes\",\"3\":\"no\",\"4\":\"USA\",\"5\":\"40\",\"6\":\"female\",\"_rn_\":\"2\"},{\"1\":\"Too Little\",\"2\":\"yes\",\"3\":\"no\",\"4\":\"USA\",\"5\":\"36\",\"6\":\"female\",\"_rn_\":\"3\"},{\"1\":\"Too Much\",\"2\":\"yes\",\"3\":\"yes\",\"4\":\"USA\",\"5\":\"25\",\"6\":\"female\",\"_rn_\":\"4\"},{\"1\":\"Too Little\",\"2\":\"yes\",\"3\":\"yes\",\"4\":\"USA\",\"5\":\"39\",\"6\":\"male\",\"_rn_\":\"5\"},{\"1\":\"About Right\",\"2\":\"yes\",\"3\":\"no\",\"4\":\"USA\",\"5\":\"80\",\"6\":\"female\",\"_rn_\":\"6\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n\n```{.r .cell-code}\nsummary(df_all)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n        poverty     religion   degree          country          age       \n Too Little :2708   no : 786   no :4238   Australia:1874   Min.   :18.00  \n About Right:1862   yes:4595   yes:1143   Norway   :1127   1st Qu.:31.00  \n Too Much   : 811                         Sweden   :1003   Median :43.00  \n                                          USA      :1377   Mean   :45.04  \n                                                           3rd Qu.:58.00  \n                                                           Max.   :92.00  \n    gender    \n female:2725  \n male  :2656  \n              \n              \n              \n              \n```\n\n\n:::\n:::\n\n\n\n\n\nデータセットのさらなる詳細については `?WVS` を実行することで確認できます。\n\n## 使用方法\n\n### 基本的な使用方法\n\n`makedummies`関数により、すべてのfactor型変数(順序付きを含む)をダミー変数に変換することが出来ます。\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf_all_dummy <- makedummies(df_all)\nhead(df_all_dummy)\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"\"],\"name\":[\"_rn_\"],\"type\":[\"\"],\"align\":[\"left\"]},{\"label\":[\"poverty_About Right\"],\"name\":[1],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"poverty_Too Much\"],\"name\":[2],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"religion\"],\"name\":[3],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"degree\"],\"name\":[4],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"country_Norway\"],\"name\":[5],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"country_Sweden\"],\"name\":[6],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"country_USA\"],\"name\":[7],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"age\"],\"name\":[8],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"gender\"],\"name\":[9],\"type\":[\"int\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"0\",\"2\":\"0\",\"3\":\"1\",\"4\":\"0\",\"5\":\"0\",\"6\":\"0\",\"7\":\"1\",\"8\":\"44\",\"9\":\"1\",\"_rn_\":\"1\"},{\"1\":\"1\",\"2\":\"0\",\"3\":\"1\",\"4\":\"0\",\"5\":\"0\",\"6\":\"0\",\"7\":\"1\",\"8\":\"40\",\"9\":\"0\",\"_rn_\":\"2\"},{\"1\":\"0\",\"2\":\"0\",\"3\":\"1\",\"4\":\"0\",\"5\":\"0\",\"6\":\"0\",\"7\":\"1\",\"8\":\"36\",\"9\":\"0\",\"_rn_\":\"3\"},{\"1\":\"0\",\"2\":\"1\",\"3\":\"1\",\"4\":\"1\",\"5\":\"0\",\"6\":\"0\",\"7\":\"1\",\"8\":\"25\",\"9\":\"0\",\"_rn_\":\"4\"},{\"1\":\"0\",\"2\":\"0\",\"3\":\"1\",\"4\":\"1\",\"5\":\"0\",\"6\":\"0\",\"7\":\"1\",\"8\":\"39\",\"9\":\"1\",\"_rn_\":\"5\"},{\"1\":\"1\",\"2\":\"0\",\"3\":\"1\",\"4\":\"0\",\"5\":\"0\",\"6\":\"0\",\"7\":\"1\",\"8\":\"80\",\"9\":\"0\",\"_rn_\":\"6\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n\n\n\nfactor型変数だった列が、(カテゴリの数 - 1)個の列に変換されています。\n\n基準となるカテゴリ(例えば、`poverty`列なら`\"Too Little\"`、`religion`列なら`\"no\"`)に対応する列は作られず、\nそれ以外のカテゴリに対して、「対応するカテゴリに所属しているなら1」というダミー変数が生成されています。\n\nカテゴリが3個以上ある場合、列名が「元の列名_カテゴリ名」のように加工されます。\n一方、カテゴリが2個しかない場合は、元の列名のままとなっています。\n\nfactor型ではない列(`age`)はそのまま残されていることがわかります。\n\n### 引数 basal_level: 基準カテゴリに対応する列を作る\n\n引数 `basal_level` に `TRUE` を与えることで、基準となるカテゴリに対応する列も作られるようになります。\nなお、このような変換をワンホットエンコーディングといいます。\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf_all_dummy <- makedummies(df_all, basal_level = TRUE)\nhead(df_all_dummy)\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"\"],\"name\":[\"_rn_\"],\"type\":[\"\"],\"align\":[\"left\"]},{\"label\":[\"poverty_Too Little\"],\"name\":[1],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"poverty_About Right\"],\"name\":[2],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"poverty_Too Much\"],\"name\":[3],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"religion_no\"],\"name\":[4],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"religion_yes\"],\"name\":[5],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"degree_no\"],\"name\":[6],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"degree_yes\"],\"name\":[7],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"country_Australia\"],\"name\":[8],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"country_Norway\"],\"name\":[9],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"country_Sweden\"],\"name\":[10],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"country_USA\"],\"name\":[11],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"age\"],\"name\":[12],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"gender_female\"],\"name\":[13],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"gender_male\"],\"name\":[14],\"type\":[\"int\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"1\",\"2\":\"0\",\"3\":\"0\",\"4\":\"0\",\"5\":\"1\",\"6\":\"1\",\"7\":\"0\",\"8\":\"0\",\"9\":\"0\",\"10\":\"0\",\"11\":\"1\",\"12\":\"44\",\"13\":\"0\",\"14\":\"1\",\"_rn_\":\"1\"},{\"1\":\"0\",\"2\":\"1\",\"3\":\"0\",\"4\":\"0\",\"5\":\"1\",\"6\":\"1\",\"7\":\"0\",\"8\":\"0\",\"9\":\"0\",\"10\":\"0\",\"11\":\"1\",\"12\":\"40\",\"13\":\"1\",\"14\":\"0\",\"_rn_\":\"2\"},{\"1\":\"1\",\"2\":\"0\",\"3\":\"0\",\"4\":\"0\",\"5\":\"1\",\"6\":\"1\",\"7\":\"0\",\"8\":\"0\",\"9\":\"0\",\"10\":\"0\",\"11\":\"1\",\"12\":\"36\",\"13\":\"1\",\"14\":\"0\",\"_rn_\":\"3\"},{\"1\":\"0\",\"2\":\"0\",\"3\":\"1\",\"4\":\"0\",\"5\":\"1\",\"6\":\"0\",\"7\":\"1\",\"8\":\"0\",\"9\":\"0\",\"10\":\"0\",\"11\":\"1\",\"12\":\"25\",\"13\":\"1\",\"14\":\"0\",\"_rn_\":\"4\"},{\"1\":\"1\",\"2\":\"0\",\"3\":\"0\",\"4\":\"0\",\"5\":\"1\",\"6\":\"0\",\"7\":\"1\",\"8\":\"0\",\"9\":\"0\",\"10\":\"0\",\"11\":\"1\",\"12\":\"39\",\"13\":\"0\",\"14\":\"1\",\"_rn_\":\"5\"},{\"1\":\"0\",\"2\":\"1\",\"3\":\"0\",\"4\":\"0\",\"5\":\"1\",\"6\":\"1\",\"7\":\"0\",\"8\":\"0\",\"9\":\"0\",\"10\":\"0\",\"11\":\"1\",\"12\":\"80\",\"13\":\"1\",\"14\":\"0\",\"_rn_\":\"6\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n\n\n\n### 引数 col: 特定の列のみ出力する\n\n引数 `col` に列名を与えることで、その列の処理結果だけが出力されるようになります。\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf_all_dummy <- makedummies(df_all, col = \"poverty\")\nhead(df_all_dummy)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  poverty_About Right poverty_Too Much\n1                   0                0\n2                   1                0\n3                   0                0\n4                   0                1\n5                   0                0\n6                   1                0\n```\n\n\n:::\n:::\n\n\n\n\n次のように、複数の列を出力対象にすることもできます。また、数値型のような処理されない列を含めることも可能です。\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf_all_dummy <- makedummies(df_all, col = c(\"poverty\", \"age\", \"gender\"))\nhead(df_all_dummy)\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"\"],\"name\":[\"_rn_\"],\"type\":[\"\"],\"align\":[\"left\"]},{\"label\":[\"poverty_About Right\"],\"name\":[1],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"poverty_Too Much\"],\"name\":[2],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"age\"],\"name\":[3],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"gender\"],\"name\":[4],\"type\":[\"int\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"0\",\"2\":\"0\",\"3\":\"44\",\"4\":\"1\",\"_rn_\":\"1\"},{\"1\":\"1\",\"2\":\"0\",\"3\":\"40\",\"4\":\"0\",\"_rn_\":\"2\"},{\"1\":\"0\",\"2\":\"0\",\"3\":\"36\",\"4\":\"0\",\"_rn_\":\"3\"},{\"1\":\"0\",\"2\":\"1\",\"3\":\"25\",\"4\":\"0\",\"_rn_\":\"4\"},{\"1\":\"0\",\"2\":\"0\",\"3\":\"39\",\"4\":\"1\",\"_rn_\":\"5\"},{\"1\":\"1\",\"2\":\"0\",\"3\":\"80\",\"4\":\"0\",\"_rn_\":\"6\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n\n\n\n\n### 引数 numerical: ダミー変数化ではなく単純に整数に変換する列を指定\n\n引数 `numerical` に列名を与えることで、その列は単純に1, 2, 3, …とカテゴリ別の整数に変換するように変更できます。\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf_all_dummy <- makedummies(df_all, numerical =  c(\"poverty\", \"gender\"))\nhead(df_all_dummy)\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"\"],\"name\":[\"_rn_\"],\"type\":[\"\"],\"align\":[\"left\"]},{\"label\":[\"poverty\"],\"name\":[1],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"religion\"],\"name\":[2],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"degree\"],\"name\":[3],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"country_Norway\"],\"name\":[4],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"country_Sweden\"],\"name\":[5],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"country_USA\"],\"name\":[6],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"age\"],\"name\":[7],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"gender\"],\"name\":[8],\"type\":[\"int\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"1\",\"2\":\"1\",\"3\":\"0\",\"4\":\"0\",\"5\":\"0\",\"6\":\"1\",\"7\":\"44\",\"8\":\"2\",\"_rn_\":\"1\"},{\"1\":\"2\",\"2\":\"1\",\"3\":\"0\",\"4\":\"0\",\"5\":\"0\",\"6\":\"1\",\"7\":\"40\",\"8\":\"1\",\"_rn_\":\"2\"},{\"1\":\"1\",\"2\":\"1\",\"3\":\"0\",\"4\":\"0\",\"5\":\"0\",\"6\":\"1\",\"7\":\"36\",\"8\":\"1\",\"_rn_\":\"3\"},{\"1\":\"3\",\"2\":\"1\",\"3\":\"1\",\"4\":\"0\",\"5\":\"0\",\"6\":\"1\",\"7\":\"25\",\"8\":\"1\",\"_rn_\":\"4\"},{\"1\":\"1\",\"2\":\"1\",\"3\":\"1\",\"4\":\"0\",\"5\":\"0\",\"6\":\"1\",\"7\":\"39\",\"8\":\"2\",\"_rn_\":\"5\"},{\"1\":\"2\",\"2\":\"1\",\"3\":\"0\",\"4\":\"0\",\"5\":\"0\",\"6\":\"1\",\"7\":\"80\",\"8\":\"1\",\"_rn_\":\"6\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n\n\n\n### 引数 as.is: 変換しない列を指定\n\n引数 `as.is` に列名を与えることで、その列は処理の対象から除外されます。\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf_all_dummy <- makedummies(df_all, as.is =  c(\"poverty\", \"country\"))\nhead(df_all_dummy)\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"\"],\"name\":[\"_rn_\"],\"type\":[\"\"],\"align\":[\"left\"]},{\"label\":[\"poverty\"],\"name\":[1],\"type\":[\"ord\"],\"align\":[\"right\"]},{\"label\":[\"religion\"],\"name\":[2],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"degree\"],\"name\":[3],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"country\"],\"name\":[4],\"type\":[\"fct\"],\"align\":[\"left\"]},{\"label\":[\"age\"],\"name\":[5],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"gender\"],\"name\":[6],\"type\":[\"int\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"Too Little\",\"2\":\"1\",\"3\":\"0\",\"4\":\"USA\",\"5\":\"44\",\"6\":\"1\",\"_rn_\":\"1\"},{\"1\":\"About Right\",\"2\":\"1\",\"3\":\"0\",\"4\":\"USA\",\"5\":\"40\",\"6\":\"0\",\"_rn_\":\"2\"},{\"1\":\"Too Little\",\"2\":\"1\",\"3\":\"0\",\"4\":\"USA\",\"5\":\"36\",\"6\":\"0\",\"_rn_\":\"3\"},{\"1\":\"Too Much\",\"2\":\"1\",\"3\":\"1\",\"4\":\"USA\",\"5\":\"25\",\"6\":\"0\",\"_rn_\":\"4\"},{\"1\":\"Too Little\",\"2\":\"1\",\"3\":\"1\",\"4\":\"USA\",\"5\":\"39\",\"6\":\"1\",\"_rn_\":\"5\"},{\"1\":\"About Right\",\"2\":\"1\",\"3\":\"0\",\"4\":\"USA\",\"5\":\"80\",\"6\":\"0\",\"_rn_\":\"6\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n\n\n\n## 補足\n\n### 存在しないカテゴリに対する動作\n\nfactor型の定義にはあるものの、実際には存在しないカテゴリについては、ダミー変数化の対象から除かれます。\n\nたとえば上から3行のみを抽出したとします。\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf_minimum <- df_all[1:3,c(\"poverty\", \"gender\")]\ndf_minimum\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"\"],\"name\":[\"_rn_\"],\"type\":[\"\"],\"align\":[\"left\"]},{\"label\":[\"poverty\"],\"name\":[1],\"type\":[\"ord\"],\"align\":[\"right\"]},{\"label\":[\"gender\"],\"name\":[2],\"type\":[\"fct\"],\"align\":[\"left\"]}],\"data\":[{\"1\":\"Too Little\",\"2\":\"male\",\"_rn_\":\"1\"},{\"1\":\"About Right\",\"2\":\"female\",\"_rn_\":\"2\"},{\"1\":\"Too Little\",\"2\":\"female\",\"_rn_\":\"3\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n\n\n\n`poverty`列には`\"Too Much\"`のカテゴリとなるデータがありません。\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(df_minimum)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n        poverty     gender \n Too Little :2   female:2  \n About Right:1   male  :1  \n Too Much   :0             \n```\n\n\n:::\n:::\n\n\n\n\nこの場合、`makedummies`関数による処理では`\"Too Much\"`に対応するダミー変数は作られません。\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmakedummies(df_minimum)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  poverty gender\n1       0      1\n2       1      0\n3       0      0\n```\n\n\n:::\n:::\n\n\n\n\nなお、単一のカテゴリしかない列が存在するとエラーとなります。\nこのような列はモデル構築においても悪影響を及ぼしうるため、前処理の中で別途取り除いておくことが考えられます。\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf_minimum <- df_all[1:3,c(\"country\", \"gender\")]\nsummary(df_minimum) #countryはUSAのみ\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n      country     gender \n Australia:0   female:2  \n Norway   :0   male  :1  \n Sweden   :0             \n USA      :3             \n```\n\n\n:::\n\n```{.r .cell-code}\nmakedummies(df_minimum) #res[cbind(seq.int(m), dat)] <- 1L でエラー: 添え字が許される範囲外です\n```\n\n::: {.cell-output .cell-output-error}\n\n```\nError in res[cbind(seq.int(m), dat)] <- 1L: subscript out of bounds\n```\n\n\n:::\n:::\n\n\n\n\n\n### NA値に対する動作\n\nNA値(欠損値)が含まれている場合、ダミー変数化後もNA値のままとなります。\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#NAの混ざったデータを生成\nN <- 6\ndf_NA <- df_all[1:N, c(\"poverty\",\"gender\")]\nset.seed(2024)\ndf_NA <- data.frame(lapply(df_NA, function(x) {\n    x[[floor(runif(1, min=1, max=N+1))]] <- NA\n    x\n  }))\ndf_NA\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"poverty\"],\"name\":[1],\"type\":[\"ord\"],\"align\":[\"right\"]},{\"label\":[\"gender\"],\"name\":[2],\"type\":[\"fct\"],\"align\":[\"left\"]}],\"data\":[{\"1\":\"Too Little\",\"2\":\"male\"},{\"1\":\"About Right\",\"2\":\"NA\"},{\"1\":\"Too Little\",\"2\":\"female\"},{\"1\":\"Too Much\",\"2\":\"female\"},{\"1\":\"Too Little\",\"2\":\"male\"},{\"1\":\"NA\",\"2\":\"female\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmakedummies(df_NA)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  poverty_About Right poverty_Too Much gender\n1                   0                0      1\n2                   1                0     NA\n3                   0                0      0\n4                   0                1      0\n5                   0                0      1\n6                  NA               NA      0\n```\n\n\n:::\n:::\n\n\n\n\n\n\n### factor型以外の取り扱い\n\n本パッケージはfactor型以外の列の加工には対応していません。\n\n実質的にはカテゴリ変数であるものの、数値や文字列として格納されている場合には、factor型に変換してから`makedummies`関数を使用します。\n\n例えば性別が文字列で、学歴が数値で格納されているとしましょう。当然これらはfactor型ではないので、`makedummies`関数では加工できません。\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf_tmp <- data.frame(\"性別\" = c(\"女\", \"男\", \"女\", \"男\"), \"学歴\" = c(1, 1, 3, 2))\ndf_tmp\n```\n\n::: {.cell-output .cell-output-stdout}\n\n``` output-jp\n  性別 学歴\n1   女    1\n2   男    1\n3   女    3\n4   男    2\n```\n\n\n:::\n\n```{.r .cell-code}\nmakedummies(df_tmp)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n``` output-jp\n  性別 学歴\n1   女    1\n2   男    1\n3   女    3\n4   男    2\n```\n\n\n:::\n:::\n\n\n\n\n以下のように、`factor`関数等を用いてfactor型に変換する必要があります。\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf_tmp$性別 <- factor(df_tmp$性別, levels = c(\"男\", \"女\"))\ndf_tmp$学歴 <- factor(df_tmp$学歴, levels = c(1, 2, 3), labels = c(\"高卒\", \"大卒\", \"大学院卒\"), ordered = TRUE)\nstr(df_tmp)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n``` output-jp\n'data.frame':\t4 obs. of  2 variables:\n $ 性別: Factor w/ 2 levels \"男\",\"女\": 2 1 2 1\n $ 学歴: Ord.factor w/ 3 levels \"高卒\"<\"大卒\"<..: 1 1 3 2\n```\n\n\n:::\n\n```{.r .cell-code}\nmakedummies(df_tmp)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n``` output-jp\n  性別 学歴_大卒 学歴_大学院卒\n1    1         0             0\n2    0         0             0\n3    1         0             1\n4    0         1             0\n```\n\n\n:::\n:::\n\n\n\n\n\n### 基準カテゴリの変更\n\n本パッケージでは基準カテゴリを指定する機能は無いため、事前に`relevel`関数などで変更しておく必要があります。\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf_tmp <- df_all\ndf_tmp$country <- relevel(df_tmp$country, \"USA\")#アメリカを基準カテゴリに変更\nhead(makedummies(df_tmp))\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"\"],\"name\":[\"_rn_\"],\"type\":[\"\"],\"align\":[\"left\"]},{\"label\":[\"poverty_About Right\"],\"name\":[1],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"poverty_Too Much\"],\"name\":[2],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"religion\"],\"name\":[3],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"degree\"],\"name\":[4],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"country_Australia\"],\"name\":[5],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"country_Norway\"],\"name\":[6],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"country_Sweden\"],\"name\":[7],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"age\"],\"name\":[8],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"gender\"],\"name\":[9],\"type\":[\"int\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"0\",\"2\":\"0\",\"3\":\"1\",\"4\":\"0\",\"5\":\"0\",\"6\":\"0\",\"7\":\"0\",\"8\":\"44\",\"9\":\"1\",\"_rn_\":\"1\"},{\"1\":\"1\",\"2\":\"0\",\"3\":\"1\",\"4\":\"0\",\"5\":\"0\",\"6\":\"0\",\"7\":\"0\",\"8\":\"40\",\"9\":\"0\",\"_rn_\":\"2\"},{\"1\":\"0\",\"2\":\"0\",\"3\":\"1\",\"4\":\"0\",\"5\":\"0\",\"6\":\"0\",\"7\":\"0\",\"8\":\"36\",\"9\":\"0\",\"_rn_\":\"3\"},{\"1\":\"0\",\"2\":\"1\",\"3\":\"1\",\"4\":\"1\",\"5\":\"0\",\"6\":\"0\",\"7\":\"0\",\"8\":\"25\",\"9\":\"0\",\"_rn_\":\"4\"},{\"1\":\"0\",\"2\":\"0\",\"3\":\"1\",\"4\":\"1\",\"5\":\"0\",\"6\":\"0\",\"7\":\"0\",\"8\":\"39\",\"9\":\"1\",\"_rn_\":\"5\"},{\"1\":\"1\",\"2\":\"0\",\"3\":\"1\",\"4\":\"0\",\"5\":\"0\",\"6\":\"0\",\"7\":\"0\",\"8\":\"80\",\"9\":\"0\",\"_rn_\":\"6\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n\n\n\n`reorder`関数で数が多いカテゴリを基準カテゴリにするなど、機械的に基準カテゴリを変更しておくことも考えられます。\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf_tmp <- df_all\ntable(df_tmp$country) #カテゴリごとの件数を表示\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nAustralia    Norway    Sweden       USA \n     1874      1127      1003      1377 \n```\n\n\n:::\n\n```{.r .cell-code}\ndf_tmp$country <- reorder(df_tmp$country, df_tmp$country, length, decreasing = TRUE) #件数が多い順にカテゴリを並べ替える\nhead(makedummies(df_tmp)) #最も件数が多かったAustraliaが基準カテゴリになっている\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"\"],\"name\":[\"_rn_\"],\"type\":[\"\"],\"align\":[\"left\"]},{\"label\":[\"poverty_About Right\"],\"name\":[1],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"poverty_Too Much\"],\"name\":[2],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"religion\"],\"name\":[3],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"degree\"],\"name\":[4],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"country_USA\"],\"name\":[5],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"country_Norway\"],\"name\":[6],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"country_Sweden\"],\"name\":[7],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"age\"],\"name\":[8],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"gender\"],\"name\":[9],\"type\":[\"int\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"0\",\"2\":\"0\",\"3\":\"1\",\"4\":\"0\",\"5\":\"1\",\"6\":\"0\",\"7\":\"0\",\"8\":\"44\",\"9\":\"1\",\"_rn_\":\"1\"},{\"1\":\"1\",\"2\":\"0\",\"3\":\"1\",\"4\":\"0\",\"5\":\"1\",\"6\":\"0\",\"7\":\"0\",\"8\":\"40\",\"9\":\"0\",\"_rn_\":\"2\"},{\"1\":\"0\",\"2\":\"0\",\"3\":\"1\",\"4\":\"0\",\"5\":\"1\",\"6\":\"0\",\"7\":\"0\",\"8\":\"36\",\"9\":\"0\",\"_rn_\":\"3\"},{\"1\":\"0\",\"2\":\"1\",\"3\":\"1\",\"4\":\"1\",\"5\":\"1\",\"6\":\"0\",\"7\":\"0\",\"8\":\"25\",\"9\":\"0\",\"_rn_\":\"4\"},{\"1\":\"0\",\"2\":\"0\",\"3\":\"1\",\"4\":\"1\",\"5\":\"1\",\"6\":\"0\",\"7\":\"0\",\"8\":\"39\",\"9\":\"1\",\"_rn_\":\"5\"},{\"1\":\"1\",\"2\":\"0\",\"3\":\"1\",\"4\":\"0\",\"5\":\"1\",\"6\":\"0\",\"7\":\"0\",\"8\":\"80\",\"9\":\"0\",\"_rn_\":\"6\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n\n\n\n### 順序付きfactor型\n\n順序付きfactor型とはカテゴリ変数を取り扱うfactor型の中でも特殊なもので、\nカテゴリ間に大小関係のような順序関係があること(質的変数のなかでも順序尺度であること)を表しています。\n\n`class`関数で型を確認してみると`ordered`という型が付与されており、順序付きでないfactor型とは区別されていることがわかります。\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlapply(df_all, class)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n$poverty\n[1] \"ordered\" \"factor\" \n\n$religion\n[1] \"factor\"\n\n$degree\n[1] \"factor\"\n\n$country\n[1] \"factor\"\n\n$age\n[1] \"integer\"\n\n$gender\n[1] \"factor\"\n```\n\n\n:::\n:::\n\n\n\n\n順序付きfactor型変数は、`factor`関数で引数`ordered`に`TRUE`を与える(または`ordered`関数を使用する)ことで生成することができます。\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf_tmp <- factor(c(4,2,4,2,3,2,3), levels = c(1,2,3,4), \n          labels = c(\"まったくそう思わない\", \"あまりそう思わない\", \"ややそう思う\", \"とてもそう思う\"),\n          ordered = TRUE)\ndf_tmp\n```\n\n::: {.cell-output .cell-output-stdout}\n\n``` output-jp\n[1] とてもそう思う     あまりそう思わない とてもそう思う     あまりそう思わない\n[5] ややそう思う       あまりそう思わない ややそう思う      \n4 Levels: まったくそう思わない < あまりそう思わない < ... < とてもそう思う\n```\n\n\n:::\n\n```{.r .cell-code}\nclass(df_tmp)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n``` output-jp\n[1] \"ordered\" \"factor\" \n```\n\n\n:::\n:::\n\n\n\n\n### tibbleに対する動作\n\ndata.frame型を拡張したものにtibbleがありますが、`makedummies`関数がtibbleを加工した場合はtibbleのまま返します。\n\ndata.frame型を加工すると当然data.frame型のままです[^class]が…\n\n[^class]:意図された動作かは不明なものの、すべての列が変換対象となったときは行列(matrix型)になります。\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nclass(df_all)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"data.frame\"\n```\n\n\n:::\n\n```{.r .cell-code}\nclass(makedummies(df_all))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"data.frame\"\n```\n\n\n:::\n:::\n\n\n\n\ntibbleを加工したものはtibbleになります。\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tibble)\ndf_all_tb <- as_tibble(df_all)\nclass(df_all_tb)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"tbl_df\"     \"tbl\"        \"data.frame\"\n```\n\n\n:::\n\n```{.r .cell-code}\nclass(makedummies(df_all_tb))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"tbl_df\"     \"tbl\"        \"data.frame\"\n```\n\n\n:::\n:::\n\n\n\n\nなお、tibbleはtidyverseに含まれるもののうちの一つで、\n例えば以下のような記法で列を選択した時にベクトルにならない(データフレームのままである)等の点で\nR標準のdata.frameとは違いがあります。\n\ntibbleを用いている場合、加工後にtibbleとしての機能が失われないことは利便性の観点で重要です。\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhead(df_all[,\"poverty\"])\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] Too Little  About Right Too Little  Too Much    Too Little  About Right\nLevels: Too Little < About Right < Too Much\n```\n\n\n:::\n\n```{.r .cell-code}\nhead(df_all_tb[,\"poverty\"])\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"poverty\"],\"name\":[1],\"type\":[\"ord\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"Too Little\"},{\"1\":\"About Right\"},{\"1\":\"Too Little\"},{\"1\":\"Too Much\"},{\"1\":\"Too Little\"},{\"1\":\"About Right\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n\n\n\n### 他の関数・パッケージとの比較\n\n#### model.matrix関数\n\n数値型への変換にあたってはR標準の`model.matrix`関数が使われることがあります。\n\nこちらは予測モデルに入力する計画行列を生成するための関数で、交互作用項の追加等、ダミー変数化以外の機能もあります。\n\n出力は行列(matrix型)となるため注意してください。\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhead(model.matrix(~ . , data = df_all)) #切片項が生成される　順序付きfactor型に対しては多項式対比を使用\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  (Intercept)     poverty.L  poverty.Q religionyes degreeyes countryNorway\n1           1 -7.071068e-01  0.4082483           1         0             0\n2           1 -7.850462e-17 -0.8164966           1         0             0\n3           1 -7.071068e-01  0.4082483           1         0             0\n4           1  7.071068e-01  0.4082483           1         1             0\n5           1 -7.071068e-01  0.4082483           1         1             0\n6           1 -7.850462e-17 -0.8164966           1         0             0\n  countrySweden countryUSA age gendermale\n1             0          1  44          1\n2             0          1  40          0\n3             0          1  36          0\n4             0          1  25          0\n5             0          1  39          1\n6             0          1  80          0\n```\n\n\n:::\n\n```{.r .cell-code}\nhead(model.matrix(~ . +0, data = df_all)) #切片項が生成されない\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  povertyToo Little povertyAbout Right povertyToo Much religionyes degreeyes\n1                 1                  0               0           1         0\n2                 0                  1               0           1         0\n3                 1                  0               0           1         0\n4                 0                  0               1           1         1\n5                 1                  0               0           1         1\n6                 0                  1               0           1         0\n  countryNorway countrySweden countryUSA age gendermale\n1             0             0          1  44          1\n2             0             0          1  40          0\n3             0             0          1  36          0\n4             0             0          1  25          0\n5             0             0          1  39          1\n6             0             0          1  80          0\n```\n\n\n:::\n:::\n\n\n\n\n#### fastDummiesパッケージ\n\n本パッケージと非常に類似するパッケージとしてfastDummiesパッケージがあります。\n名前のとおり、`model.matrix`関数よりも処理が高速だとされています。\n\n`dummy_cols`関数によりダミー変数化が可能です。\nただし、`makedummies`関数とはデフォルトの処理が若干異なっています。\nたとえば順序付きfactor型は処理対象としないほか、ダミー変数化前の変数が残る、\n基準カテゴリに対応するダミー変数も作成する、といった点が異なります。\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(fastDummies)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: package 'fastDummies' was built under R version 4.5.1\n```\n\n\n:::\n\n```{.r .cell-code}\nhead(dummy_cols(df_all))\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"\"],\"name\":[\"_rn_\"],\"type\":[\"\"],\"align\":[\"left\"]},{\"label\":[\"poverty\"],\"name\":[1],\"type\":[\"ord\"],\"align\":[\"right\"]},{\"label\":[\"religion\"],\"name\":[2],\"type\":[\"fct\"],\"align\":[\"left\"]},{\"label\":[\"degree\"],\"name\":[3],\"type\":[\"fct\"],\"align\":[\"left\"]},{\"label\":[\"country\"],\"name\":[4],\"type\":[\"fct\"],\"align\":[\"left\"]},{\"label\":[\"age\"],\"name\":[5],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"gender\"],\"name\":[6],\"type\":[\"fct\"],\"align\":[\"left\"]},{\"label\":[\"poverty_Too Little\"],\"name\":[7],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"poverty_About Right\"],\"name\":[8],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"poverty_Too Much\"],\"name\":[9],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"religion_no\"],\"name\":[10],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"religion_yes\"],\"name\":[11],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"degree_no\"],\"name\":[12],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"degree_yes\"],\"name\":[13],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"country_Australia\"],\"name\":[14],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"country_Norway\"],\"name\":[15],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"country_Sweden\"],\"name\":[16],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"country_USA\"],\"name\":[17],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"gender_female\"],\"name\":[18],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"gender_male\"],\"name\":[19],\"type\":[\"int\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"Too Little\",\"2\":\"yes\",\"3\":\"no\",\"4\":\"USA\",\"5\":\"44\",\"6\":\"male\",\"7\":\"1\",\"8\":\"0\",\"9\":\"0\",\"10\":\"0\",\"11\":\"1\",\"12\":\"1\",\"13\":\"0\",\"14\":\"0\",\"15\":\"0\",\"16\":\"0\",\"17\":\"1\",\"18\":\"0\",\"19\":\"1\",\"_rn_\":\"1\"},{\"1\":\"About Right\",\"2\":\"yes\",\"3\":\"no\",\"4\":\"USA\",\"5\":\"40\",\"6\":\"female\",\"7\":\"0\",\"8\":\"1\",\"9\":\"0\",\"10\":\"0\",\"11\":\"1\",\"12\":\"1\",\"13\":\"0\",\"14\":\"0\",\"15\":\"0\",\"16\":\"0\",\"17\":\"1\",\"18\":\"1\",\"19\":\"0\",\"_rn_\":\"2\"},{\"1\":\"Too Little\",\"2\":\"yes\",\"3\":\"no\",\"4\":\"USA\",\"5\":\"36\",\"6\":\"female\",\"7\":\"1\",\"8\":\"0\",\"9\":\"0\",\"10\":\"0\",\"11\":\"1\",\"12\":\"1\",\"13\":\"0\",\"14\":\"0\",\"15\":\"0\",\"16\":\"0\",\"17\":\"1\",\"18\":\"1\",\"19\":\"0\",\"_rn_\":\"3\"},{\"1\":\"Too Much\",\"2\":\"yes\",\"3\":\"yes\",\"4\":\"USA\",\"5\":\"25\",\"6\":\"female\",\"7\":\"0\",\"8\":\"0\",\"9\":\"1\",\"10\":\"0\",\"11\":\"1\",\"12\":\"0\",\"13\":\"1\",\"14\":\"0\",\"15\":\"0\",\"16\":\"0\",\"17\":\"1\",\"18\":\"1\",\"19\":\"0\",\"_rn_\":\"4\"},{\"1\":\"Too Little\",\"2\":\"yes\",\"3\":\"yes\",\"4\":\"USA\",\"5\":\"39\",\"6\":\"male\",\"7\":\"1\",\"8\":\"0\",\"9\":\"0\",\"10\":\"0\",\"11\":\"1\",\"12\":\"0\",\"13\":\"1\",\"14\":\"0\",\"15\":\"0\",\"16\":\"0\",\"17\":\"1\",\"18\":\"0\",\"19\":\"1\",\"_rn_\":\"5\"},{\"1\":\"About Right\",\"2\":\"yes\",\"3\":\"no\",\"4\":\"USA\",\"5\":\"80\",\"6\":\"female\",\"7\":\"0\",\"8\":\"1\",\"9\":\"0\",\"10\":\"0\",\"11\":\"1\",\"12\":\"1\",\"13\":\"0\",\"14\":\"0\",\"15\":\"0\",\"16\":\"0\",\"17\":\"1\",\"18\":\"1\",\"19\":\"0\",\"_rn_\":\"6\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n\n\n\n\n\n\n引数により処理をカスタマイズすることができます。\n\n例えば引数`select_columns`により処理対象の列を指定することが出来ます。\nここでは順序付きfactor型だけでなく、数値型をも処理の対象とすることが出来ます。\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhead(dummy_cols(df_all,\n                #処理対象列の指定\n                select_columns = c(\"poverty\",\"religion\",\"degree\",\"county\"),\n                #元の列を残さない\n                remove_selected_columns = TRUE,\n                #基準カテゴリに対応するダミー変数を作らない\n                remove_first_dummy = TRUE \n                ))\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in dummy_cols(df_all, select_columns = c(\"poverty\", \"religion\", : NOTE: The following select_columns input(s) is not a column in data.\n\t\n```\n\n\n:::\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"\"],\"name\":[\"_rn_\"],\"type\":[\"\"],\"align\":[\"left\"]},{\"label\":[\"country\"],\"name\":[1],\"type\":[\"fct\"],\"align\":[\"left\"]},{\"label\":[\"age\"],\"name\":[2],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"gender\"],\"name\":[3],\"type\":[\"fct\"],\"align\":[\"left\"]},{\"label\":[\"poverty_About Right\"],\"name\":[4],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"poverty_Too Much\"],\"name\":[5],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"religion_yes\"],\"name\":[6],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"degree_yes\"],\"name\":[7],\"type\":[\"int\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"USA\",\"2\":\"44\",\"3\":\"male\",\"4\":\"0\",\"5\":\"0\",\"6\":\"1\",\"7\":\"0\",\"_rn_\":\"1\"},{\"1\":\"USA\",\"2\":\"40\",\"3\":\"female\",\"4\":\"1\",\"5\":\"0\",\"6\":\"1\",\"7\":\"0\",\"_rn_\":\"2\"},{\"1\":\"USA\",\"2\":\"36\",\"3\":\"female\",\"4\":\"0\",\"5\":\"0\",\"6\":\"1\",\"7\":\"0\",\"_rn_\":\"3\"},{\"1\":\"USA\",\"2\":\"25\",\"3\":\"female\",\"4\":\"0\",\"5\":\"1\",\"6\":\"1\",\"7\":\"1\",\"_rn_\":\"4\"},{\"1\":\"USA\",\"2\":\"39\",\"3\":\"male\",\"4\":\"0\",\"5\":\"0\",\"6\":\"1\",\"7\":\"1\",\"_rn_\":\"5\"},{\"1\":\"USA\",\"2\":\"80\",\"3\":\"female\",\"4\":\"1\",\"5\":\"0\",\"6\":\"1\",\"7\":\"0\",\"_rn_\":\"6\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n\n\n\n\n\nなお、NA値に対してはデフォルトで個別のダミー変数を作成する挙動となっていますが、\n引数`ignore_na`でこれを制御することが出来ます。\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhead(dummy_cols(df_NA, remove_selected_columns = TRUE, ignore_na = FALSE))\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"\"],\"name\":[\"_rn_\"],\"type\":[\"\"],\"align\":[\"left\"]},{\"label\":[\"poverty_Too Little\"],\"name\":[1],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"poverty_About Right\"],\"name\":[2],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"poverty_Too Much\"],\"name\":[3],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"poverty_NA\"],\"name\":[4],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"gender_female\"],\"name\":[5],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"gender_male\"],\"name\":[6],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"gender_NA\"],\"name\":[7],\"type\":[\"int\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"1\",\"2\":\"0\",\"3\":\"0\",\"4\":\"0\",\"5\":\"0\",\"6\":\"1\",\"7\":\"0\",\"_rn_\":\"1\"},{\"1\":\"0\",\"2\":\"1\",\"3\":\"0\",\"4\":\"0\",\"5\":\"NA\",\"6\":\"NA\",\"7\":\"1\",\"_rn_\":\"2\"},{\"1\":\"1\",\"2\":\"0\",\"3\":\"0\",\"4\":\"0\",\"5\":\"1\",\"6\":\"0\",\"7\":\"0\",\"_rn_\":\"3\"},{\"1\":\"0\",\"2\":\"0\",\"3\":\"1\",\"4\":\"0\",\"5\":\"1\",\"6\":\"0\",\"7\":\"0\",\"_rn_\":\"4\"},{\"1\":\"1\",\"2\":\"0\",\"3\":\"0\",\"4\":\"0\",\"5\":\"0\",\"6\":\"1\",\"7\":\"0\",\"_rn_\":\"5\"},{\"1\":\"NA\",\"2\":\"NA\",\"3\":\"NA\",\"4\":\"1\",\"5\":\"1\",\"6\":\"0\",\"7\":\"0\",\"_rn_\":\"6\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n\n```{.r .cell-code}\nhead(dummy_cols(df_NA, remove_selected_columns = TRUE, ignore_na = TRUE))\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"\"],\"name\":[\"_rn_\"],\"type\":[\"\"],\"align\":[\"left\"]},{\"label\":[\"poverty_Too Little\"],\"name\":[1],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"poverty_About Right\"],\"name\":[2],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"poverty_Too Much\"],\"name\":[3],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"gender_female\"],\"name\":[4],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"gender_male\"],\"name\":[5],\"type\":[\"int\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"1\",\"2\":\"0\",\"3\":\"0\",\"4\":\"0\",\"5\":\"1\",\"_rn_\":\"1\"},{\"1\":\"0\",\"2\":\"1\",\"3\":\"0\",\"4\":\"NA\",\"5\":\"NA\",\"_rn_\":\"2\"},{\"1\":\"1\",\"2\":\"0\",\"3\":\"0\",\"4\":\"1\",\"5\":\"0\",\"_rn_\":\"3\"},{\"1\":\"0\",\"2\":\"0\",\"3\":\"1\",\"4\":\"1\",\"5\":\"0\",\"_rn_\":\"4\"},{\"1\":\"1\",\"2\":\"0\",\"3\":\"0\",\"4\":\"0\",\"5\":\"1\",\"_rn_\":\"5\"},{\"1\":\"NA\",\"2\":\"NA\",\"3\":\"NA\",\"4\":\"1\",\"5\":\"0\",\"_rn_\":\"6\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n\n\n\n\nその他、最も大きなカテゴリを基準カテゴリとする引数`remove_most_frequent_dummy`、\n複数のカテゴリ名が単一の文字列に含まれる際の処理を行う引数`split`、\n元の列名をダミー変数に引き継がない引数`omit_colname_prefix`といった機能があります。\n\nまた、factor型の列に関してすべてのカテゴリ（の組み合わせ）が現れるように行を補完する`dummy_rows`関数も提供されます。\n\n#### onehotパッケージ\n\nonehotパッケージはシンプルにワンホットエンコーディングを行う機能だけを提供するものです。\n\nまず`onehot`関数によりエンコーダーを生成し、`predict`関数により実際にデータを変換します。\n\n出力は行列(matrix型)となるため注意してください。\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(onehot)\ndf_tmp <- df_all\n#順序付きfactor型があるとエラーとなるため普通のfactor型に変換\ndf_tmp$poverty <- factor(df_tmp$poverty, ordered = FALSE)\n#ここでのdf_tmpはデータの形式を指定するためのもので、実際に変換したいデータと同一データである必要はない\nencoder <- onehot(df_tmp) \nhead(predict(encoder, df_tmp))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n     poverty=Too Little poverty=About Right poverty=Too Much religion=no\n[1,]                  1                   0                0           0\n[2,]                  0                   1                0           0\n[3,]                  1                   0                0           0\n[4,]                  0                   0                1           0\n[5,]                  1                   0                0           0\n[6,]                  0                   1                0           0\n     religion=yes degree=no degree=yes country=Australia country=Norway\n[1,]            1         1          0                 0              0\n[2,]            1         1          0                 0              0\n[3,]            1         1          0                 0              0\n[4,]            1         0          1                 0              0\n[5,]            1         0          1                 0              0\n[6,]            1         1          0                 0              0\n     country=Sweden country=USA age gender=female gender=male\n[1,]              0           1  44             0           1\n[2,]              0           1  40             1           0\n[3,]              0           1  36             1           0\n[4,]              0           1  25             1           0\n[5,]              0           1  39             0           1\n[6,]              0           1  80             1           0\n```\n\n\n:::\n:::\n\n\n\n\n\n#### recipesパッケージ\n\nrecipesパッケージはtidymodelsに含まれ、ダミー変数化を含む様々な前処理機能を提供するパッケージです。\n\n前処理手順のオブジェクト化などtidyな(整然とした)コーディングが可能になるほか、\n他のtidymodelsのパッケージとの連携も特徴です。\n本パッケージはダミー変数化のためだけに導入するようなものではありませんが、\nそのようなコーディングを指向する場合にはこちらを用いるべきかもしれません。\n\nダミー変数化を行う機能を提供するのは`step_dummy`関数で、例えば次のように使用します。\nなお、順序付きfactor型変数に対しては多項式対比を用いた変換が行われます。\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(recipes)\nrec <- recipe(df_all, formula = ) %>%\n  step_dummy(all_factor(), all_ordered())\nrec %>% prep() %>% bake(new_data = NULL) %>% head()\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"age\"],\"name\":[1],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"religion_yes\"],\"name\":[2],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"degree_yes\"],\"name\":[3],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"country_Norway\"],\"name\":[4],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"country_Sweden\"],\"name\":[5],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"country_USA\"],\"name\":[6],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"gender_male\"],\"name\":[7],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"poverty_1\"],\"name\":[8],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"poverty_2\"],\"name\":[9],\"type\":[\"dbl\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"44\",\"2\":\"1\",\"3\":\"0\",\"4\":\"0\",\"5\":\"0\",\"6\":\"1\",\"7\":\"1\",\"8\":\"-7.071068e-01\",\"9\":\"0.4082483\"},{\"1\":\"40\",\"2\":\"1\",\"3\":\"0\",\"4\":\"0\",\"5\":\"0\",\"6\":\"1\",\"7\":\"0\",\"8\":\"-7.850462e-17\",\"9\":\"-0.8164966\"},{\"1\":\"36\",\"2\":\"1\",\"3\":\"0\",\"4\":\"0\",\"5\":\"0\",\"6\":\"1\",\"7\":\"0\",\"8\":\"-7.071068e-01\",\"9\":\"0.4082483\"},{\"1\":\"25\",\"2\":\"1\",\"3\":\"1\",\"4\":\"0\",\"5\":\"0\",\"6\":\"1\",\"7\":\"0\",\"8\":\"7.071068e-01\",\"9\":\"0.4082483\"},{\"1\":\"39\",\"2\":\"1\",\"3\":\"1\",\"4\":\"0\",\"5\":\"0\",\"6\":\"1\",\"7\":\"1\",\"8\":\"-7.071068e-01\",\"9\":\"0.4082483\"},{\"1\":\"80\",\"2\":\"1\",\"3\":\"0\",\"4\":\"0\",\"5\":\"0\",\"6\":\"1\",\"7\":\"0\",\"8\":\"-7.850462e-17\",\"9\":\"-0.8164966\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n\n\n\n\n\n\n#### その他のパッケージ\n\ncaretパッケージの`dummyVars`関数、mltoolsパッケージの`one_hot`関数でも同様の処理は可能です。\nこれらのパッケージを利用している場合は、それらの関数を用いてもよいでしょう。\nただし、これらはより広範な機能を提供するパッケージのため、ダミー変数化のためだけに導入するようなものではありません。\n\n## 参考文献\n\n::: {#refs}\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"../site_libs/pagedtable-1.1/css/pagedtable.css\" rel=\"stylesheet\" />\n<script src=\"../site_libs/pagedtable-1.1/js/pagedtable.js\"></script>\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}